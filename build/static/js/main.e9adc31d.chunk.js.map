{"version":3,"sources":["Pages/Chat.jsx","redux/actionTypes.js","redux/validation/is-empty.js","redux/reducer/facultyReducer.js","redux/reducer/adminReducer.js","redux/reducer/studentReducer.js","redux/reducer/errorReducerHelper.js","redux/reducer/errorReducer.js","redux/reducer/rootReducer.js","redux/store.js","redux/utils/setAuthToken.js","redux/action/facultyAction.js","redux/action/adminAction.js","redux/action/studentAction.js","Pages/LoginPage.jsx","Components/HomeHelper.jsx","Pages/StudentHome.jsx","Pages/StudentDetails.jsx","Components/FacultyHomeHelper.jsx","Pages/FacultyInterface.jsx","Pages/AttendenceFaculty.jsx","Components/AdminHomeHelper.jsx","Pages/AdminAddStudent.jsx","Pages/AdminAddFaculty.jsx","Pages/AdminAddSubject.jsx","Pages/StudentAttendencePage.jsx","Pages/FacultyStudentLoginPags.jsx","Pages/StudentUpdatePassword.jsx","Pages/FacultyUpdatePassword.jsx","Pages/ForgotPassword.jsx","Pages/RecieverUserDetails.jsx","Pages/StudentUpdateProfile.jsx","Pages/Student/StudentSubjectList.jsx","Pages/Faculty/FacultyUploadMarks.jsx","Pages/Faculty/FacultyUpdateProfile.jsx","Pages/Student/StudentTestPerformance.jsx","Pages/Admin/AdminAddAdmin.jsx","Pages/Admin/AdminGetAllFaculty.jsx","Pages/Admin/AdminGetAllStudents.jsx","Pages/Admin/AdminGetAllSubjects.jsx","Pages/Admin/AdminHome.jsx","App.js","index.js"],"names":["socket","SET_ERRORS","isEmpty","value","undefined","Object","keys","length","trim","initialState","isAuthenticated","faculty","flag","updateProfileFlag","allSubjectCodeList","fetchedStudents","fetchedStudentsHelper","facultyReducer","state","action","type","payload","admin","adminAddFacultyFlag","adminAddStudentFlag","adminAddAdminFlag","adminAddSubjectFlag","allSubject","allFaculty","allStudent","adminReducer","student","alongsideStudent","chatHistory","regNumStudent","privateChat","privateChat2","newerChats","previousChats","allSubjects","attendence","allMarks","studentReducer","setErrorsHelper","setErrors","combineReducers","error","errorReducer","errorHelper","errorReducerHelper","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","setAuthToken","token","axios","defaults","headers","common","setFaculty","data","url","fetchStudentsHelper","subjectCodeListHelper","fetchStudents","department","year","section","dispatch","a","method","result","subjectCode","response","facultyUpdateProfileFlag","facultyUpdate","updatedData","console","log","message","facultyLogout","localStorage","removeItem","setAdmin","adminGetAllFacultyHelper","adminGetAllStudentHelper","adminGetAllSubjectHelper","adminLogout","setStudent","getStudentByRegNameHelper","privateConversation","privateConversation2","newerChatsHelper","previousChatsHelper","getAllSubjectsHelper","fetchAttendenceHelper","getMarksHelper","studentUpdate","studentLogout","LoginPage","useSelector","useDispatch","useState","registrationNumber","setRegistrationNumber","password","setPassword","setError","isLoading","setIsLoading","history","useHistory","useEffect","push","className","noValidate","onSubmit","e","adminCredential","preventDefault","setItem","decoded","jwt_decode","htmlFor","onChange","target","classnames","id","class","role","Home","name","setName","receiverName","senderName","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","to","toUpperCase","aria-haspopup","aria-labelledby","style","listStyle","onClick","HomeHelper","width","src","avatar","alt","email","dob","batch","gender","studentMobileNumber","aadharCard","fatherName","fatherMobileNumber","StudentDetails","setDepartment","setYear","setSection","setResult","filterStudentHelper","filterByNameHelper","formHandler","placeholder","map","res","index","key","scope","senderRegistrationNumber","receiverRegistrationNumber","obj","FacultyInterface","FacultyHomeHelper","designation","joiningYear","facultyMobileNumber","AttendenceFaculty","setSubjectCode","checkedValue","setCheckedValue","isLoading2","setIsLoading2","handleInputChange","tempCheck","checked","indexOf","splice","classNameName","selectedStudents","alert","markAttendence","required","subjectCodeName","_id","AdminAddStudent","setEmail","setDob","setGender","setContactNumber","setFatherName","setFatherContactNumber","setAadharCard","AdminHomeHelper","studentCredential","split","reverse","join","AdminAddFaculty","setDesignation","facultyMobileNUmber","setFacultyMobileNumber","facultyCredential","AdminAddSubject","subjectName","setSubjectName","totalLectures","setTotalLectures","subjectCredential","maxHours","lectureAttended","absentHours","totalLecturesByFaculty","FacultyStudentLoginPags","facultyRegNum","setFacultyRegNum","facultyPassword","setFacultyPassword","studentRegNum","setStudentRegNum","studentPassword","setStudentPassword","errors","errorsHelper","isFacultyLoading","setIsFacultyLoading","isStudentLoading","setIsStudentLoading","backgroundColor","borderRadius","padding","StudentUpdatePassword","oldPassword","setOldPassword","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","passwordData","FacultyUpdatePassword","withRouter","props","user","setUser","otp","setOtp","helper","setHelper","match","params","newPasswordWithOtp","submitOTPStudent","submitOTPFaculty","studentEmail","getOTPFaculty","aria-describedby","Chat","room1","setRoom1","room2","setRoom2","setReceiverRegistrationNumber","setMessage","messageArray","setMessageArray","olderMessages","setOlderMessages","ENDPOINT","temp","room","io","tempArr","input","value_1","value_2","swap","tempRoom2","roomId","getPrivateConversation2","emit","on","off","sender","messageObj","senderId","messageobj","createdAt","RecieverUserDetails","getStudentByRegName","setAvatar","setModal","formData","FormData","append","accept","files","img","StudentSubjectList","FacultyUploadMarks","marks","setMarks","totalMarks","setTotalMarks","exam","setExam","setErrorHelper","uploadMarks","newMarks","findIndex","m","StudentTestPerformance","CycleTest1","subject","CycleTest2","Semester","toFixed","AdminAddAdmin","contactNumber","adminCredentails","AdminGetAllFaculty","form-inline","adminGetAllFaculty","searchCredentials","AdminGetAllSubjects","adminGetAllSubject","AdminHome","window","facultyJwtToken","currentTime","Date","now","exp","location","studentJwtToken","setStudentUser","adminJwtToken","setAdminUser","App","exact","path","component","StudentUpdateProfile","facultyInterface","AdminGetAllStudent","AdminGetAllSubject","StudentAttendencePage","StudentTestPerformace","FacultyUpdateProfile","ForgotPassword","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e9adc31d.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport HomeHelper from '../Components/HomeHelper'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { sendMessage, getPrivateConversation, getPrivateConversation2} from '../redux/action/studentAction'\r\nimport io from 'socket.io-client';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n//Swap HelperFunction\r\nfunction swap(input, value_1, value_2) {\r\n    var temp = input[value_1];\r\n    input[value_1] = input[value_2];\r\n    input[value_2] = temp;\r\n}\r\n\r\n\r\nlet socket;\r\n\r\n\r\nconst Chat = (props) => {\r\n    \r\n    const store = useSelector((store) => store)\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const [room1, setRoom1] = useState(\"\")\r\n    const [room2, setRoom2] = useState(\"\")\r\n    const [receiverRegistrationNumber, setReceiverRegistrationNumber] = useState(\"\")\r\n    const [message, setMessage] = useState(\"\")\r\n    const [messageArray, setMessageArray] = useState([])\r\n    const [olderMessages, setOlderMessages] = useState([])\r\n    const ENDPOINT = 'https://myerp.onrender.com/'\r\n    // const ENDPOINT = 'http://localhost:5000/'\r\n\r\n    useEffect(() => {\r\n        let temp = props.match.params.room\r\n        socket = io(ENDPOINT)\r\n        let tempArr = temp.split(\".\")\r\n        setReceiverRegistrationNumber(tempArr[0])\r\n        setRoom1(temp)\r\n        swap(tempArr, 0, 1)\r\n        let tempRoom2 = tempArr[0] + '.' + tempArr[1]\r\n        setRoom2(tempRoom2)\r\n    }, [ENDPOINT, props.match.params.room])\r\n    \r\n\r\n    useEffect(() => {\r\n        dispatch(getPrivateConversation(room1))\r\n        dispatch(getPrivateConversation2(room2))\r\n        socket = io(ENDPOINT)\r\n        socket.emit('join room', {\r\n            room1,\r\n            room2\r\n        })\r\n        socket.on(\"new Message\", (data) => {\r\n            setMessageArray([...messageArray, data])\r\n        })\r\n        return () => {\r\n            socket.emit('disconnect')\r\n            socket.off()\r\n        }\r\n    }, [room1, room2])\r\n\r\n\r\n    \r\n    const formHandler = (e) => {\r\n        e.preventDefault()\r\n        if (message.trim().length > 0) {\r\n            socket.emit(\"private message\", {\r\n                sender: store.student.student.student.name,\r\n                message,\r\n                room: room1\r\n            })\r\n            setMessage(\"\")\r\n            let messageObj = {\r\n                roomId: room1,\r\n                senderName: store.student.student.student.name,\r\n                senderId: store.student.student.student._id,\r\n                message,\r\n                senderRegistrationNumber: store.student.student.student.registrationNumber,\r\n                receiverRegistrationNumber\r\n            }\r\n            dispatch(sendMessage(room1,messageObj))\r\n        }\r\n        else {\r\n            alert(\"Can't send empty message\")\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        socket.on(\"new Message\", (data) => {\r\n            setOlderMessages(store.student.privateChat)\r\n            setMessageArray([...messageArray, data])\r\n        })\r\n        \r\n    },[messageArray,olderMessages])\r\n   \r\n\r\n    return (\r\n        <div>\r\n            {store.student.isAuthenticated ? <>\r\n                <HomeHelper />\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-5\">\r\n                            <form className=\"form-inline\" onSubmit={formHandler}>\r\n                                <div className=\"form-group \">\r\n                                    {/* <input value={message} onChange={(e) => setMessage(e.target.value)} placeholder=\"Type here..\" type=\"text\" className=\"form-control\" /> */}\r\n                                    <textarea value={message} onChange={(e) => setMessage(e.target.value)} placeholder=\"Type here..\" type=\"text\" className=\"form-control\" />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-primary ml-1 \">Send</button>\r\n                            </form>\r\n                        </div>\r\n                        <div className=\"col-md-7\">\r\n                            {\r\n                                store.student.privateChat.map((obj,index) =>\r\n                                    <div key={index}>\r\n                                        <p>{obj.senderName}: {obj.message}, {obj.createdAt}</p>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                            {messageArray.map((obj, index) =>\r\n                                <p key={index}>{obj.sender}: {obj.message}</p>\r\n                            )}\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </> : (history.push('/'))}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","//ERROR\r\nexport const SET_ERRORS = \"SET_ERRORS\"\r\nexport const SET_ERRORS_HELPER = \"SET_ERRORS_HELPER\"\r\nexport const SET_FLAG = \"SET_FLAG\"\r\n\r\n//ADMIN\r\nexport const SET_ADMIN = \"SET_ADMIN\"\r\nexport const GET_SUBJECTS = \"GET_SUBJECTS\"\r\n\r\n\r\n\r\n//FACULTY\r\nexport const SET_FACULTY = \"SET_FACULTY\"\r\nexport const FACULTY_UPDATE_PASSWORD = \"FACULTY_UPDATE_PASSWORD\"\r\n\r\n//STUDENT\r\nexport const SET_STUDENT = \"SET_STUDENT\"\r\nexport const STUDENT_UPDATE_PASSWORD = \"STUDENT_UPDATE_PASSWORD\"\r\nexport const SET_OTP = \"SET_OTP\"\r\n\r\n\r\n","const isEmpty = value =>\r\n    value === undefined ||\r\n    value === null ||\r\n    (typeof value === 'object' && Object.keys(value).length === 0) ||\r\n    (typeof value === 'string' && value.trim().length === 0);\r\n\r\nexport default isEmpty;\r\n","\r\nimport { SET_FACULTY } from '../actionTypes'\r\n\r\nimport isEmpty from '../validation/is-empty'\r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    faculty: {},\r\n    flag: false,\r\n    updateProfileFlag: false,\r\n    allSubjectCodeList: [],\r\n    fetchedStudents: [],\r\n    fetchedStudentsHelper: true\r\n}\r\n\r\n\r\nconst facultyReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_FACULTY: {\r\n            return {\r\n                ...state,\r\n                isAuthenticated: !isEmpty(action.payload),\r\n                faculty: action.payload\r\n            }\r\n        }\r\n        case \"FETCH_STUDENTS\": {\r\n            return {\r\n                ...state,\r\n                fetchedStudentsHelper: false,\r\n                fetchedStudents: action.payload\r\n            }\r\n        }\r\n        case \"FACULTY_UPDATE_PROFILE_FLAG\": {\r\n            return {\r\n                ...state,\r\n                updateProfileFlag: action.payload\r\n            }\r\n        }\r\n        case \"GET_SUBJECTCODE_LIST\": {\r\n            return {\r\n                ...state,\r\n                allSubjectCodeList: action.payload\r\n            }\r\n        }\r\n        case \"HELPER\": {\r\n            return {\r\n                ...state,\r\n                fetchedStudentsHelper: action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default facultyReducer","\r\nimport { SET_ADMIN, GET_SUBJECTS } from '../actionTypes'\r\nimport isEmpty from '../validation/is-empty'\r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    admin: {},\r\n    adminAddFacultyFlag: false,\r\n    adminAddStudentFlag: false,\r\n    adminAddAdminFlag: false,\r\n    adminAddSubjectFlag: false,\r\n    allSubject: {},\r\n    allFaculty: [],\r\n    allStudent: [],\r\n    allSubject: []\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst adminReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_ADMIN: \r\n            return {\r\n                ...state,\r\n                isAuthenticated: !isEmpty(action.payload),\r\n                admin: action.payload\r\n            }\r\n        case GET_SUBJECTS: {\r\n            return {\r\n                ...state,\r\n                allSubject: action.payload\r\n            }\r\n        }\r\n        case \"ADMIN_ADD_FACULTY_FLAG\": {\r\n            return {\r\n                ...state,\r\n                adminAddFacultyFlag: action.payload\r\n            }\r\n        }\r\n        case \"ADMIN_ADD_STUDENT_FLAG\": {\r\n            return {\r\n                ...state,\r\n                adminAddStudentFlag: action.payload\r\n            }\r\n        }\r\n        case \"ADMIN_ADD_SUBJECT_FLAG\": {\r\n            return {\r\n                ...state,\r\n                adminAddSubjectFlag: action.payload\r\n            }\r\n        }\r\n        case \"ADMIN_ADD_ADMIN_FLAG\": {\r\n            return {\r\n                ...state,\r\n                adminAddAdminFlag: action.payload\r\n            }\r\n        }\r\n        case \"GET_ALL_FACULTY\": {\r\n            return {\r\n                ...state,\r\n                allFaculty: action.payload\r\n            }\r\n        }\r\n        case \"GET_ALL_STUDENT\": {\r\n            return {\r\n                ...state,\r\n                allStudent: action.payload\r\n            }\r\n        }\r\n        case \"GET_ALL_SUBJECT\": {\r\n            return {\r\n                ...state,\r\n                allSubject: action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default adminReducer","\r\nimport { SET_STUDENT, SET_OTP, SET_FLAG } from '../actionTypes'\r\n\r\nimport isEmpty from '../validation/is-empty'\r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    student: {},\r\n    alongsideStudent: {},\r\n    flag: false,\r\n    chatHistory: [],\r\n    regNumStudent: {},\r\n    privateChat: [],\r\n    privateChat2: [],\r\n    newerChats: [],\r\n    previousChats: [],\r\n    allSubjects: [],\r\n    attendence: [], \r\n    allMarks: {}\r\n}\r\n\r\n\r\nconst studentReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_STUDENT:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: !isEmpty(action.payload),\r\n                student: action.payload\r\n            }\r\n        case \"CHAT_HELPER\":\r\n            return {\r\n                ...state,\r\n                alongsideStudent: action.payload\r\n            }\r\n        case SET_FLAG:\r\n            return {\r\n                ...state,\r\n                flag: true\r\n            }\r\n        case \"SET_CHAT\":\r\n            return {\r\n                ...state, \r\n                chatHistory : [state.chatHistory, action.payload]\r\n            }\r\n        case \"GET_STUDENT_BY_REG_NUM\": {\r\n            return {\r\n                ...state,\r\n                regNumStudent: action.payload\r\n            }\r\n        }\r\n        case \"GET_PRIVATE_CONVERSATION\": {\r\n            return {\r\n                ...state,\r\n                privateChat: action.payload\r\n            }\r\n        }\r\n        case \"GET_PRIVATE_CONVERSATION2\": {\r\n            return {\r\n                ...state,\r\n                privateChat2: action.payload\r\n            }\r\n        }\r\n        case \"GET_NEWER_CHATS\": {\r\n            return {\r\n                ...state,\r\n                newerChats: action.payload\r\n            }\r\n        }\r\n        case \"GET_PREVIOUS_CHATS\": {\r\n            return {\r\n                ...state,\r\n                previousChats: action.payload\r\n            }\r\n        }\r\n        case \"GET_ALL_SUBJECTS\": \r\n            return {\r\n                ...state,\r\n                allSubjects: action.payload\r\n            }\r\n        \r\n        case \"GET_ATTENDENCE\": \r\n            return {\r\n                ...state,\r\n                attendence: action.payload\r\n            }\r\n        \r\n        case \"GET_MARKS\": \r\n            return {\r\n                ...state,\r\n                allMarks: action.payload\r\n            }\r\n        \r\n        default:\r\n            return state\r\n        \r\n    } \r\n}\r\n\r\nexport default studentReducer","import { SET_ERRORS_HELPER } from '../actionTypes';\r\n\r\nconst initialState = {};\r\n\r\nconst setErrorsHelper = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_ERRORS_HELPER:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default setErrorsHelper\r\n\r\n\r\n","import { SET_ERRORS } from '../actionTypes';\r\n\r\nconst initialState = {};\r\n\r\nconst setErrors = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_ERRORS:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default setErrors\r\n\r\n\r\n","import { combineReducers } from 'redux';\r\nimport facultyReducer from './facultyReducer'\r\nimport adminReducer from './adminReducer'\r\nimport studentReducer from './studentReducer'\r\nimport errorReducerHelper from './errorReducerHelper'\r\nimport errorReducer from './errorReducer'\r\n\r\n\r\nexport default combineReducers({\r\n    faculty: facultyReducer,\r\n    admin: adminReducer,\r\n    student: studentReducer,\r\n    error: errorReducer,\r\n    errorHelper: errorReducerHelper\r\n});","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducer/rootReducer';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n        applyMiddleware(...middleware)\r\n        // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n);\r\n\r\nexport default store;\r\n\r\n\r\n","import axios from 'axios';\r\n\r\nconst setAuthToken = token => {\r\n    if (token) {\r\n        // Apply to every request\r\n        axios.defaults.headers.common['Authorization'] = token;\r\n    } else {\r\n        // Delete auth header\r\n        delete axios.defaults.headers.common['Authorization'];\r\n    }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import axios from 'axios';\r\nimport setAuthToken from '../utils/setAuthToken'\r\nimport jwt_decode from 'jwt-decode';\r\nimport { SET_FACULTY, SET_ERRORS, SET_FLAG, SET_ERRORS_HELPER } from '../actionTypes'\r\n\r\nconst setFaculty = (data) => {\r\n    return {\r\n        type: SET_FACULTY,\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst url = \"https://myerp.onrender.com\"\r\n// const url = \"http://localhost:5000\"\r\n\r\nconst fetchStudentsHelper = (data) => {\r\n    return {\r\n        type: \"FETCH_STUDENTS\",\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst subjectCodeListHelper = (data) => {\r\n    return {\r\n        type: \"GET_SUBJECTCODE_LIST\",\r\n        payload: data\r\n    }\r\n}\r\n\r\n\r\nexport const facultyLogin = (facultyCredential) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'Post',\r\n                url: url + \"/api/faculty/login\",\r\n                data: facultyCredential\r\n            })\r\n            const { token } = data;\r\n            // Set token to local Storage\r\n            localStorage.setItem('facultyJwtToken', token);\r\n            // Set token to Auth header\r\n            setAuthToken(token);\r\n            // Decode token to get user data\r\n            const decoded = jwt_decode(token);\r\n            // Set current user\r\n            dispatch(setFaculty(decoded))\r\n        }\r\n        catch (err) {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const facultyUpdatePassword = (passwordData) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'Post',\r\n                url: url + \"/api/faculty/updatePassword\",\r\n                data: passwordData\r\n            })\r\n            alert(\"Password Updated Successfully\")\r\n        }\r\n        catch (err) {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const getOTPFaculty = (studentEmail) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            await axios({\r\n                method: 'Post',\r\n                url: url + '/api/faculty/forgotPassword',\r\n                data: studentEmail\r\n            })\r\n            alert(\"Otp has been sent to your email\")\r\n            dispatch({ type: SET_FLAG })\r\n        }\r\n        catch (err) {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const submitOTPFaculty = (newPasswordWithOtp, history) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'Post',\r\n                url: url + \"/api/faculty/postOTP\",\r\n                data: newPasswordWithOtp\r\n            })\r\n            alert(\"Password Update, kindly login with updated password\")\r\n            history.push('/')\r\n        }\r\n        catch (err) {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const fetchStudents = (department, year, section) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'Post',\r\n                url: url + \"/api/faculty/fetchStudents\",\r\n                data: { department, year, section}\r\n            })\r\n            dispatch(fetchStudentsHelper(data.result))\r\n            dispatch(subjectCodeListHelper(data.subjectCode))\r\n        }\r\n        catch (err) {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nconst facultyUpdateProfileFlag = (data) => {\r\n    return {\r\n        type: \"FACULTY_UPDATE_PROFILE_FLAG\",\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const facultyUpdate = (updatedData) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'Post',\r\n                url: url + `/api/faculty/updateProfile`,\r\n                data: updatedData\r\n            })\r\n            dispatch(facultyUpdateProfileFlag(true))\r\n        }\r\n        catch (err) {\r\n            console.log(\"Error in sending message\", err.message)\r\n        }\r\n    }\r\n}\r\n\r\nexport const markAttendence = (selectedStudents, subjectCode, department, year,\r\n           section) => {\r\n    return async(dispatch) => {\r\n        try {\r\n                await axios({\r\n                method: 'Post',\r\n                    url: url + \"/api/faculty/markAttendence\",\r\n                data: { selectedStudents, subjectCode, department, year, section}\r\n                })\r\n            alert(\"attendence has been marked successfully\")\r\n            dispatch({\r\n                type: \"HELPER\",\r\n                payload: true\r\n            })\r\n        }\r\n        catch (err) {\r\n           console.log(\"Error in marking attendence, faculty action\", err.message)\r\n        }\r\n    }\r\n}\r\n\r\nexport const uploadMarks = (subjectCode, exam, totalMarks, marks,\r\n    department, year, section, ) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            await axios({\r\n                method: 'Post',\r\n                url: url + \"/api/faculty/uploadMarks\",\r\n                data: {\r\n                    subjectCode, exam, totalMarks, marks, department, year, section,\r\n                    }\r\n            })\r\n            alert(\"Mark uploaded successfully\")\r\n            dispatch({\r\n                type: \"HELPER\",\r\n                payload: true\r\n            })\r\n           \r\n        }\r\n        catch (err) {\r\n            dispatch({\r\n                type: SET_ERRORS_HELPER,\r\n                payload: err.response.data\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const setFacultyUser = data => {\r\n    return {\r\n        type: SET_FACULTY,\r\n        payload: data\r\n    };\r\n}\r\n\r\nexport const facultyLogout = () =>\r\n    (dispatch) => {\r\n        // Remove token from localStorage\r\n        localStorage.removeItem('facultyJwtToken');\r\n        // Remove auth header for future requests\r\n        setAuthToken(false);\r\n        // Set current user to {} which will set isAuthenticated to false\r\n        dispatch(setFaculty({}));\r\n    };","import axios from 'axios';\r\nimport setAuthToken from '../utils/setAuthToken'\r\nimport jwt_decode from 'jwt-decode';\r\nimport {\r\n    SET_ADMIN, SET_ERRORS, \r\n    GET_SUBJECTS\r\n} from '../actionTypes'\r\n\r\n// const url = \"http://localhost:5000\"\r\nconst url = \"https://myerp.onrender.com\"\r\n\r\nconst setAdmin = (data) => {\r\n    return {\r\n        type: SET_ADMIN,\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst adminAddFacultyFlag = (data) => {\r\n    return {\r\n        type: \"ADMIN_ADD_FACULTY_FLAG\",\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst adminAddStudentFlag = (data) => {\r\n    return {\r\n        type: \"ADMIN_ADD_STUDENT_FLAG\",\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst adminAddSubjectFlag = (data) => {\r\n    return {\r\n        type: \"ADMIN_ADD_SUBJECT_FLAG\",\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst adminAddAdminFlag = (data) => {\r\n    return {\r\n        type: \"ADMIN_ADD_ADMIN_FLAG\",\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst getSubjctsHelper = (data) => {\r\n    return {\r\n        type: GET_SUBJECTS,\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst adminGetAllFacultyHelper = (data) => {\r\n    return {\r\n        type: \"GET_ALL_FACULTY\",\r\n        payload: data\r\n    }   \r\n}\r\n\r\nconst adminGetAllStudentHelper = (data) => {\r\n    return {\r\n        type: \"GET_ALL_STUDENT\",\r\n        payload: data\r\n    }\r\n}\r\n\r\n\r\nconst adminGetAllSubjectHelper = (data) => {\r\n    return {\r\n        type: \"GET_ALL_SUBJECT\",\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const adminLogin = (adminCredential) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            console.log(\"Admin Login Credentials\", adminCredential)\r\n            const { data } = await axios({\r\n                method: 'Post',\r\n                url: url + \"/api/admin/login\",\r\n                data: adminCredential\r\n            })\r\n            console.log(\"login response\", data)\r\n            const { token } = data;\r\n            // Set token to local Storage\r\n            localStorage.setItem('adminJwtToken', token);\r\n            // Set token to Auth header\r\n            setAuthToken(token);\r\n            // Decode token to get user data\r\n            const decoded = jwt_decode(token);\r\n            // Set current user\r\n            dispatch(setAdmin(decoded))\r\n        }\r\n        catch (err) {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const adminGetAllSubjects = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'Get',\r\n                url: url + \"/api/admin/getSubjects\",\r\n            })\r\n            dispatch(getSubjctsHelper(data))\r\n        }\r\n        catch (err) {\r\n            console.log(\"Error in getting all subjects\", err.message)\r\n        }\r\n    }\r\n}\r\n\r\nexport const adminAddFaculty = (facultyCredential) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'Post',\r\n                url: url + \"/api/admin/addFaculty\",\r\n                data: facultyCredential\r\n            })\r\n            dispatch(adminAddFacultyFlag(true))\r\n            alert(\"Faculty Added Successfully\")\r\n        }\r\n        catch (err) {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const adminAddStudent = (studentCredential) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'Post',\r\n                url: url + \"/api/admin/addStudent\",\r\n                data: studentCredential\r\n            })\r\n            dispatch(adminAddStudentFlag(true))\r\n            alert(\"Student Added Successfully\")\r\n        }\r\n        catch (err) {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const adminAddSubject = (subjectCredential) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'Post',\r\n                url: url + \"/api/admin/addSubject\",\r\n                data: subjectCredential\r\n            })\r\n            dispatch(adminAddSubjectFlag(true))\r\n            alert(\"Subject Added Successfully\")\r\n        }\r\n        catch (err) {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const adminAddAdmin = (adminCredentails) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'Post',\r\n                url: url + \"/api/admin/addAdmin\",\r\n                data: adminCredentails\r\n            })\r\n            dispatch(adminAddAdminFlag(true))\r\n            alert(\"Admin Added Successfully\")\r\n        }\r\n        catch (err) {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const adminGetAllFaculty = (department) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'Post',\r\n                url: url + \"/api/admin/getAllFaculty\",\r\n                data: department\r\n            })\r\n            dispatch(adminGetAllFacultyHelper(data.result))\r\n        }\r\n        catch (err) {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const adminGetAllStudent = (searchCredentials) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'Post',\r\n                url: url + \"/api/admin/getAllStudent\",\r\n                data: searchCredentials\r\n            })\r\n            dispatch(adminGetAllStudentHelper(data.result))\r\n        }\r\n        catch (err) {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const adminGetAllSubject = (department) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'Post',\r\n                url: url + \"/api/admin/getAllSubject\",\r\n                data: department\r\n            })\r\n            dispatch(adminGetAllSubjectHelper(data.result))\r\n        }\r\n        catch (err) {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const setAdminUser = data => {\r\n    return {\r\n        type: SET_ADMIN,\r\n        payload: data\r\n    };\r\n}\r\n\r\nexport const adminLogout = () =>\r\n    (dispatch) => {\r\n        // Remove token from localStorage\r\n        localStorage.removeItem('adminJwtToken');\r\n        // Remove auth header for future requests\r\n        setAuthToken(false);\r\n        // Set current user to {} which will set isAuthenticated to false\r\n        dispatch(setAdmin({}));\r\n    };","import axios from 'axios';\r\nimport setAuthToken from '../utils/setAuthToken'\r\nimport jwt_decode from 'jwt-decode';\r\nimport { SET_STUDENT, SET_ERRORS_HELPER, SET_ERRORS, STUDENT_UPDATE_PASSWORD, SET_OTP, SET_FLAG } from '../actionTypes'\r\n\r\nconst url = \"https://myerp.onrender.com\"\r\n// const url = \"http://localhost:5000\"\r\n\r\nexport const setChatHistory = (data) => {\r\n    return {\r\n        type: \"SET_CHAT\",\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst setStudent = (data) => {\r\n    return {\r\n        type: SET_STUDENT,\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst chatHelp = (data) => {\r\n    return {\r\n        type: \"CHAT_HELPER\",\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst getStudentByRegNameHelper = (data) => {\r\n    return {\r\n        type: \"GET_STUDENT_BY_REG_NUM\",\r\n        payload: data\r\n    }\r\n}\r\n\r\n\r\nconst privateConversation = (data) => {\r\n    return {\r\n        type: \"GET_PRIVATE_CONVERSATION\",\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst privateConversation2 = (data) => {\r\n    return {\r\n        type: \"GET_PRIVATE_CONVERSATION2\",\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst newerChatsHelper = (data) => {\r\n    return {\r\n        type: \"GET_NEWER_CHATS\",\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst previousChatsHelper = (data) => {\r\n    return {\r\n        type: \"GET_PREVIOUS_CHATS\",\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst getAllSubjectsHelper = (data) => {\r\n    return {\r\n        type: \"GET_ALL_SUBJECTS\",\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst fetchAttendenceHelper = (data) => {\r\n    return {\r\n        type: \"GET_ATTENDENCE\",\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst getMarksHelper = (data) => {\r\n    return {\r\n        type: \"GET_MARKS\",\r\n        payload: data\r\n    }\r\n    \r\n}\r\n\r\nexport const studentLogin = (studentCredential) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'Post',\r\n                url: url + \"/api/student/login\",\r\n                data: studentCredential\r\n            })\r\n            const { token } = data;\r\n            // Set token to local Storage\r\n            localStorage.setItem('studentJwtToken', token);\r\n            // Set token to Auth header\r\n            setAuthToken(token);\r\n            // Decode token to get user data\r\n            const decoded = jwt_decode(token);\r\n            // Set current user\r\n            dispatch(setStudent(decoded))\r\n           \r\n        }\r\n        catch (err) {\r\n            dispatch({\r\n                type: SET_ERRORS_HELPER,\r\n                payload: err.response.data\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const studentUpdatePassword = (passwordData) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'Post',\r\n                url: url + \"/api/student/updatePassword\",\r\n                data: passwordData\r\n            })\r\n            alert(\"Password Updated Successfully\")\r\n        }\r\n        catch (err) {\r\n            dispatch({\r\n                type: SET_ERRORS_HELPER,\r\n                payload: err.response.data\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const chatHelper = (name) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'Post',\r\n                url: url + \"/api/student/getStudentByName\",\r\n                data: name\r\n            })\r\n            dispatch(chatHelp(data.result))\r\n        }\r\n        catch (err) {\r\n            console.log('error in recent',err.message)\r\n        }\r\n    }\r\n}\r\n\r\nexport const getStudentByRegName = (registrationNumber) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'Post',\r\n                url: url + \"/api/student/getStudentByRegName\",\r\n                data: { registrationNumber }\r\n            })\r\n            dispatch(getStudentByRegNameHelper(data.result))\r\n        }\r\n        catch (err) {\r\n            console.log('Error in getting student by registration number', err.message)\r\n        }\r\n    }\r\n    \r\n}\r\n\r\n\r\nexport const getOTPStudent = (studentEmail) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            await axios({\r\n                method: 'Post',\r\n                url: url + '/api/student/forgotPassword',\r\n                data: studentEmail\r\n            })\r\n            alert(\"Otp has been sent to your email\")\r\n            dispatch({type:SET_FLAG})\r\n        }\r\n        catch (err) {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const submitOTPStudent = (newPasswordWithOtp, history) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'Post',\r\n                url: url + \"/api/student/postOTP\" ,\r\n                data:newPasswordWithOtp\r\n            })\r\n            alert(\"Password Update, kindly login with updated password\")\r\n            history.push('/')\r\n        }\r\n        catch (err){\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const sendMessage = (room,messageobj) => {\r\n    return async () => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'Post',\r\n                url: url + `/api/student/chat/${room}`,\r\n                data: messageobj\r\n            })\r\n        }\r\n        catch (err) {\r\n            console.log(\"Error in sending message\",err.message)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const getPrivateConversation = (roomId) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'Get',\r\n                url: url + `/api/student/chat/${roomId}`,\r\n            })\r\n            dispatch(privateConversation(data.result))\r\n        }\r\n        catch (err) {\r\n            console.log(\"Error in sending message\", err.message)\r\n        }\r\n    }\r\n}\r\n\r\nexport const getPrivateConversation2 = (roomId) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'Get',\r\n                url: url + `/api/student/chat/${roomId}`,\r\n            })\r\n            dispatch(privateConversation2(data.result))\r\n        }\r\n        catch (err) {\r\n            console.log(\"Error in sending message\", err.message)\r\n        }\r\n    }\r\n}\r\n\r\nexport const previousChats = (senderName) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'Get',\r\n                url: url + `/api/student/chat/previousChats/${senderName}`,\r\n            })\r\n            dispatch(previousChatsHelper(data.result))\r\n        }\r\n        catch (err) {\r\n            console.log(\"Error in sending message\", err.message)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const newerChats = (receiverName) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'Get',\r\n                url: url + `/api/student/chat/newerChats/${receiverName}`,\r\n            })\r\n            dispatch(newerChatsHelper(data.result))\r\n        }\r\n        catch (err) {\r\n            console.log(\"Error in sending message\", err.message)\r\n        }\r\n    }\r\n}\r\n\r\nexport const studentUpdate = (updatedData) => {\r\n    return async () => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'Post',\r\n                url: url + `/api/student/updateProfile`,\r\n                data: updatedData\r\n            })\r\n        }\r\n        catch (err) {\r\n            console.log(\"Error in sending message\", err.message)\r\n        }\r\n    }\r\n}\r\n\r\nexport const getAllSubjects = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'Get',\r\n                url: url + \"/api/student/getAllSubjects\"\r\n            })\r\n            dispatch(getAllSubjectsHelper(data.result))\r\n        }\r\n        catch (err) {\r\n            console.log(\"Error in sending message\", err.message)\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchAttendence = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'Get',\r\n                url: url + \"/api/student/checkAttendence\"\r\n            })\r\n            dispatch(fetchAttendenceHelper(data.result))\r\n        }\r\n        catch (err) {\r\n            console.log(\"Error in sending message\", err.message)\r\n        }\r\n    \r\n    }\r\n}\r\n\r\nexport const getMarks = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'Get',\r\n                url: url + \"/api/student/getMarks\"\r\n            })\r\n           dispatch(getMarksHelper(data.result))\r\n        }\r\n        catch (err) {\r\n            console.log(\"Error in getting marks\", err.message)\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const setStudentUser = data => {\r\n    return {\r\n        type: SET_STUDENT,\r\n        payload: data\r\n    };\r\n}\r\n\r\nexport const studentLogout = () =>\r\n    (dispatch) => {\r\n        // Remove token from localStorage\r\n        localStorage.removeItem('studentJwtToken');\r\n        // Remove auth header for future requests\r\n        setAuthToken(false);\r\n        // Set current user to {} which will set isAuthenticated to false\r\n        dispatch(setStudent({}));\r\n    };","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { adminLogin } from '../redux/action/adminAction'\r\nimport classnames from 'classnames'\r\n\r\n\r\n\r\nconst LoginPage = () => {\r\n    const store = useSelector((store) => store)\r\n    const dispatch = useDispatch( )\r\n    const [registrationNumber, setRegistrationNumber] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [error, setError] = useState({})\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const history = useHistory()\r\n    useEffect(() => {\r\n        if (store.admin.isAuthenticated) {\r\n            history.push('/admin')\r\n        }\r\n    }, [store.admin.isAuthenticated])\r\n    useEffect(() => {\r\n        if (store.error) {\r\n            setError(store.error)\r\n        }\r\n    }, [store.error])\r\n\r\n    const fromHandler = (e) => {\r\n        e.preventDefault()\r\n        setIsLoading(true)\r\n        dispatch(adminLogin({registrationNumber, password}))\r\n       \r\n    }\r\n\r\n    useEffect(() => {\r\n        if (store.error ||\r\n            store.admin.isAuthenticated) {\r\n            setIsLoading(false)\r\n        }\r\n        \r\n        else {\r\n            setIsLoading(true)\r\n        }\r\n    }, [store.error, store.admin.isAuthenticated])\r\n\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-md-8\">\r\n                    <div className=\"d-flex justify-content-md-center align-items-center vh-100\">\r\n                        <div>\r\n                            <h1 className=\"display-4 text-center\">ADMIN</h1>\r\n                            <form noValidate onSubmit={fromHandler}>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"emailId\">Registration Number</label>\r\n                                    <input onChange={(e) => setRegistrationNumber(e.target.value)} type=\"text\" value={registrationNumber} className={classnames(\"form-control form-control-lg\",\r\n                                        {'is-invalid' : error.registrationNumber\r\n                                        \r\n                                        })} id=\"emailId\" />\r\n                                    {error.registrationNumber && (<div className=\"invalid-feedback\">{error.registrationNumber}</div>)}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"passwordId\">Password</label>\r\n                                    <input onChange={(e) => setPassword(e.target.value)} value={password} className={classnames(\"form-control form-control-lg\", {\r\n                                        \"is-invalid\": error.password\r\n                                    })}  type=\"password\" id=\"passwordId\" />\r\n                                    {error.password && (<div className=\"invalid-feedback\">{error.password}</div>)}\r\n                                </div>\r\n                                <div class=\"row justify-content-center\">\r\n                                    <div class=\"col-md-1\">\r\n                                        {\r\n                                            isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\r\n                                                <span class=\"sr-only\">Loading...</span>\r\n                                            </div>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                {!isLoading && <button type=\"submit\" className=\"btn btn-info btn-block\">Login</button>}\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default LoginPage\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { studentLogout, newerChats, previousChats} from '../redux/action/studentAction'\r\n\r\n\r\nconst Home = () => {\r\n    const history = useHistory()\r\n    const store = useSelector((store) => store)\r\n    const [name, setName] = useState(\"\")\r\n    useEffect(() => {\r\n        if (store.student.student.student.name) {\r\n            setName(store.student.student.student.name)\r\n        }\r\n    }, [store.student.student.student.name])\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(newerChats(store.student.student.student.name))\r\n        dispatch(previousChats(store.student.student.student.name))\r\n    }, [store.student.newerChats.length])\r\n    const logoutHandler = () => {\r\n        dispatch(studentLogout())\r\n        history.push('/')\r\n    }\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <nav className=\"navbar navbar-expand-lg navbar-light  bg-light\">\r\n                        <h4 className=\"navbar-brand mt-1\" href=\"\">SRM</h4>\r\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                            <span className=\"navbar-toggler-icon\"></span>\r\n                        </button>\r\n                        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                            <ul className=\"navbar-nav\">\r\n                                <li className=\"nav-item active\">\r\n                                    <button type=\"button\" className=\"btn\"><Link to=\"/home\"><li>{name.toUpperCase()}</li></Link></button>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <button type=\"button\" className=\"btn\"><Link to=\"/student/updateProfile\"><li>UPDATE PROFILE</li></Link></button>\r\n                                </li>\r\n                                <li className=\"nav-item dropdown\">\r\n                                    <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                        ACADEMIC </a>\r\n                                    <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                                        <Link className=\"dropdown-item\" to=\"/student/testPerformance\">Test Performance</Link>\r\n                                        <Link className=\"dropdown-item\" to=\"/student/attendence\">Attendance</Link>\r\n                                        <Link className=\"dropdown-item\" to=\"/student/getAllSubjects\">Student Subject List</Link>\r\n                                    </div>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <button type=\"button\" className=\"btn\"><Link to=\"/studentDetails\"><li>STUDENTS</li></Link></button>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <button type=\"button\" className=\"btn\"><Link to=\"/studentDetails\"><li>NEW CONVERSATION ({store.student.newerChats.length})</li></Link></button>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <button type=\"button\" className=\"btn\"><Link to=\"/student/updatePassword\"><li>UPDATE PASSWORD</li></Link></button>\r\n                                </li>\r\n                               \r\n                            </ul>\r\n                           \r\n                        </div>\r\n                        <div>\r\n                            <button style={{listStyle:\"none\"}} onClick={logoutHandler} type=\"button\" className=\"btn\"><li>LOGOUT</li></button>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React,{useEffect} from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport HomeHelper from '../Components/HomeHelper'\r\n\r\nconst Home = () => {\r\n    const store = useSelector((store) => store)\r\n    const history = useHistory()\r\n\r\n    return (\r\n        <div>\r\n            {store.student.isAuthenticated ? <>\r\n                <HomeHelper />\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2\">\r\n\r\n                        </div>\r\n                        <div className=\"col-md-8 mt-5\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-5\">\r\n                                    <div className=\"card\" style={{ width: \"18rem\" }}>\r\n                                        <img className=\"card-img-top\" src={store.student.student.student.avatar} alt=\"Card image cap\" />\r\n                                        <div className=\"card-body\">\r\n                                            <h5 className=\"card-title\">{store.student.student.student.name}</h5>\r\n                                            <h5 className=\"card-title\">{store.student.student.student.registrationNumber}</h5>\r\n                                            <Link to='/student/updateProfile'>UPDATE PROFILE</Link>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-7 bg-dark  text-white\">\r\n                                    <table className=\"table \">\r\n                                        <tbody className=\"text-white\">\r\n                                            <tr>\r\n                                                <td>Name</td>\r\n                                                <td>{store.student.student.student.name}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Email</td>\r\n                                                <td>{store.student.student.student.email}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Registration Number</td>\r\n                                                <td>{store.student.student.student.registrationNumber}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Date Of Birth</td>\r\n                                                <td>{store.student.student.student.dob}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Year</td>\r\n                                                <td>{store.student.student.student.year}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Department</td>\r\n                                                <td>{store.student.student.student.department}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Section</td>\r\n                                                <td>{store.student.student.student.section}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Batch</td>\r\n                                                <td>{store.student.student.student.batch}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Gender</td>\r\n                                                <td>{store.student.student.student.gender ? store.student.student.student.gender : \r\n                                                \r\n                                                   \"NA\"\r\n                                                }</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Contact Number</td>\r\n                                                <td>{store.student.student.student.studentMobileNumber ?\r\n                                                    store.student.student.student.studentMobileNumber : \"NA\"}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Aadhar Card</td>\r\n                                                <td>{store.student.student.student.aadharCard ? store.student.student.student.aadharCard : \"NA\"} </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Father Name</td>\r\n                                                <td>{store.student.student.student.fatherName ? store.student.student.student.fatherName : \"NA\" }</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Father Contact Number</td>\r\n                                                <td>{store.student.student.student.fatherMobileNumber ? store.student.student.student.fatherMobileNumber : \"NA\"}</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </> : (history.push('/'))}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n// import {newerChats, previousChats} from '../redux/action/studentAction'\r\nimport axios from 'axios'\r\nimport HomeHelper from '../Components/HomeHelper'\r\nimport {Link, useHistory } from 'react-router-dom'\r\n\r\nconst StudentDetails = () => {\r\n    const store = useSelector((store) => store)\r\n    const history = useHistory()\r\n    const [name, setName] = useState('')\r\n    const [department, setDepartment] = useState(\"\")\r\n    const [year, setYear] = useState(\"\")\r\n    const [section, setSection] = useState(\"\")\r\n    const [result, setResult] = useState([])\r\n    const url = \"https://myerp.onrender.com\"\r\n    // const url = \"http://localhost:5000\"\r\n\r\n\r\n    \r\n\r\n\r\n    const filterStudentHelper = async () => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'Post',\r\n                url: url + '/api/student/getAllStudents',\r\n                data: {\r\n                    department,\r\n                    year,\r\n                    section\r\n                }\r\n            })\r\n            setResult(data.result)\r\n        }\r\n        catch (err) {\r\n            console.log(\"Error in student register action\", err.message)\r\n        }\r\n    }\r\n\r\n    const filterByNameHelper = async () => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'Post',\r\n                url: url + '/api/student/getStudentByName',\r\n                data: {\r\n                    name\r\n                }\r\n            })\r\n            setResult(data.result)\r\n        }\r\n        catch (err) {\r\n            console.log(\"Error in student register action\", err)\r\n        }\r\n    }\r\n    \r\n\r\n    const formHandler = (e) => {\r\n        e.preventDefault()\r\n        if (name) {\r\n            filterByNameHelper()\r\n        }\r\n        else {\r\n            filterStudentHelper()\r\n        }\r\n    }\r\n  \r\n    return (\r\n        <div>\r\n            {store.student.isAuthenticated ? <>\r\n                <HomeHelper />\r\n                <div className=\"container\">\r\n                    {result.length === 0 && <div className=\"row\">\r\n                        <div className=\"col-md-3 border mt-4\">\r\n                            <div className=\"row mt-3\">\r\n                                <div className=\"col mb-2\">\r\n                                    <form className=\"form-inline\" onSubmit={formHandler}>\r\n                                        <div className=\"form-group \">\r\n                                            <input value={name} onChange={(e) => setName(e.target.value)} placeholder=\"Search by name\" type=\"text\" className=\"form-control\" />\r\n                                        </div>\r\n                                        <button type=\"submit\" className=\"btn btn-block btn-info mt-1 \">Search</button>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row justify-content-center mt-4 mb-4 \">\r\n                                <div className=\"col\">\r\n                                    <form noValidate onSubmit={formHandler}>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"branchId\">Branch</label>\r\n                                            <select onChange={(e) => setDepartment(e.target.value)} className=\"form-control\" id=\"bramchId\">\r\n                                                <option>Select</option>\r\n                                                <option value=\"E.C.E\">E.C.E</option>\r\n                                                <option value=\"E.E.E\" >E.E.E</option>\r\n                                                <option value=\"Mechanical\">Mechanical</option>\r\n                                                <option value=\"Civil\">Civil</option>\r\n                                                <option value=\"I.T\">I.T</option>\r\n                                                <option value=\"C.S.E\">C.S.E</option>\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"yearId\">Year</label>\r\n                                            <select onChange={(e) => setYear(e.target.value)} className=\"form-control\" id=\"yearId\">\r\n                                                <option>Select</option>\r\n                                                <option value=\"1\">1</option>\r\n                                                <option value=\"2\">2</option>\r\n                                                <option value=\"3\">3</option>\r\n                                                <option value=\"4\">4</option>\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"sectionId\">Section</label>\r\n                                            <select onChange={(e) => setSection(e.target.value)} className=\"form-control\" id=\"sectionId\">\r\n                                                <option>Select</option>\r\n                                                <option value=\"A\">A</option>\r\n                                                <option value=\"B\">B</option>\r\n                                                <option value=\"C\">C</option>\r\n                                                <option value=\"D\">D</option>\r\n                                                <option value=\"E\">E</option>\r\n                                                <option value=\"F\">F</option>\r\n                                            </select>\r\n                                        </div>\r\n                                        <button type=\"submit\" className=\"btn btn-info btn-block\">Search</button>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-9 border mt-4\">\r\n                            <div className=\"row justify-content-center \">\r\n                                <div className=\"col\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-6 border\">\r\n                                            <h4 className=\"text-center\">New Chats</h4>\r\n                                            <table className=\"table\">\r\n                                                <tbody>\r\n                                                    {\r\n                                                        store.student.newerChats.map((res, index) =>\r\n                                                            <tr key={index}>\r\n                                                                <th scope=\"row\">{index + 1}</th>\r\n                                                                <td>{res.senderName}</td>\r\n                                                                <td><Link to={`/student/${res.senderRegistrationNumber}`}>Explore</Link></td>\r\n                                                            </tr>\r\n                                                        )\r\n                                                    }\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                        <div className=\"col-md-6 border\">\r\n                                            <h4 className=\"text-center\">Older Chats</h4>\r\n                                            <table className=\"table\">\r\n                                                <tbody>\r\n                                                    {\r\n                                                        store.student.previousChats.map((res, index) =>\r\n                                                            <tr key={index}>\r\n                                                                <th scope=\"row\">{index + 1}</th>\r\n                                                                <td>{res.receiverName}</td>\r\n                                                                <td><Link to={`/student/${res.receiverRegistrationNumber}`}>Explore</Link></td>\r\n                                                            </tr>\r\n                                                        )\r\n                                                    }\r\n                                                </tbody>\r\n                                            </table>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>}\r\n\r\n                    {result.length !== 0 && <div className=\"row\">\r\n                        <div className=\"col-md-6 m-auto\">\r\n                            <table className=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">S.No</th>\r\n                                        <th scope=\"col\">Registration Number</th>\r\n                                        <th scope=\"col\">Name</th>\r\n                                        <th scope=\"col\">Chat</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {result.map((obj, index) =>\r\n                                        <tr key={index}>\r\n                                            <th scope=\"row\">{index + 1}</th>\r\n                                            <td>{obj.registrationNumber}</td>\r\n                                            <td>{obj.name}</td>\r\n                                            <td><Link to={`/student/${obj.registrationNumber}`}>Explore</Link></td>\r\n                                        </tr>\r\n                                    )}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>}\r\n\r\n                </div></> : (history.push('/'))}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StudentDetails\r\n","import React, {useState,useEffect} from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useDispatch, useSelector} from 'react-redux'\r\nimport {facultyLogout} from '../redux/action/facultyAction'\r\n\r\n\r\n\r\nconst Home = () => {\r\n    const store = useSelector((store)=>store)\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const [name, setName] = useState(\"\")\r\n    useEffect(() => {\r\n\r\n        if (store.faculty.faculty.faculty.name) {\r\n            setName(store.faculty.faculty.faculty.name)\r\n        }\r\n    }, [store.faculty.faculty.faculty.name])\r\n    const logoutHandler = () => {\r\n        dispatch(facultyLogout())\r\n        history.push('/')\r\n    }\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            {/* <Header /> */}\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                        <h4 className=\"navbar-brand mt-1\" href=\"\">SRM</h4>\r\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                            <span className=\"navbar-toggler-icon\"></span>\r\n                        </button>\r\n                        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                            <ul className=\"navbar-nav\">\r\n                                <li className=\"nav-item active\">\r\n                                    <button type=\"button\" className=\"btn\"><Link to=\"/home\"><li>{name.toUpperCase()}</li></Link></button>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <button type=\"button\" className=\"btn\"><Link to=\"/faculty/updateProfile\"><li>UPDATE PROFILE</li></Link></button>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <button type=\"button\" className=\"btn\"><Link to=\"/attendenceFaculty\"><li>MARK ATTENDANCE</li></Link></button>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <button type=\"button\" className=\"btn\"><Link to=\"/faculty/uploadMarks\"><li>UPLOAD MARKS</li></Link></button>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <button type=\"button\" className=\"btn\"><Link to=\"/faculty/updatePassword\"><li>UPDATE PASSWORD</li></Link></button>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                        <div>\r\n                            <button style={{listStyle:\"None\"}} onClick={logoutHandler} type=\"button\" className=\"btn\"><li>LOGOUT</li></button>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\n\r\nimport FacultyHomeHelper from '../Components/FacultyHomeHelper'\r\n\r\n\r\nconst FacultyInterface = () => {\r\n    const history = useHistory()\r\n    const store = useSelector((store) => store)\r\n    return (\r\n        <>\r\n            {store.faculty.isAuthenticated ? <>\r\n                <FacultyHomeHelper />\r\n                <div className=\"container\">\r\n                    <div className=\"row mt-5\">\r\n                        <div className=\"col-md-2\">\r\n\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-5\">\r\n                                    <div className=\"card\" style={{ width: \"18rem\" }}>\r\n                                        <img className=\"card-img-top\" src={store.faculty.faculty.faculty.avatar} alt=\"Card image cap\" />\r\n                                        <div className=\"card-body\">\r\n                                            <h5 className=\"card-title\">{store.faculty.faculty.faculty.name}</h5>\r\n                                            <h5 className=\"card-title\">{store.faculty.faculty.faculty.registrationNumber}</h5>\r\n                                            <Link to='/faculty/updateProfile'>UPDATE PROFILE</Link>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-7\">\r\n                                    <table className=\"table border\">\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>Name</td>\r\n                                                <td>{store.faculty.faculty.faculty.name}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Email</td>\r\n                                                <td>{store.faculty.faculty.faculty.email}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Registration Number</td>\r\n                                                <td>{store.faculty.faculty.faculty.registrationNumber}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Date Of Birth</td>\r\n                                                <td>{store.faculty.faculty.faculty.dob}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Designation</td>\r\n                                                <td>{store.faculty.faculty.faculty.designation}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Joining Year</td>\r\n                                                <td>{store.faculty.faculty.faculty.joiningYear}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Department</td>\r\n                                                <td>{store.faculty.faculty.faculty.department}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Gender</td>\r\n                                                <td>{store.faculty.faculty.faculty.gender ? store.faculty.faculty.faculty.gender :\r\n\r\n                                                    \"NA\"\r\n                                                }</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Contact Number</td>\r\n                                                <td>{store.faculty.faculty.faculty.facultyMobileNumber ?\r\n                                                    store.faculty.faculty.faculty.facultyMobileNumber : \"NA\"}</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </> : (history.push('/'))}\r\n           \r\n        </>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default FacultyInterface\r\n","import React, { useState, useEffect} from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport classnames from 'classnames'\r\nimport {fetchStudents,markAttendence } from '../redux/action/facultyAction'\r\nimport FacultyHomeHelper from '../Components/FacultyHomeHelper'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nconst AttendenceFaculty = () => {\r\n    const store = useSelector((store) => store)\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const [department, setDepartment] = useState(\"\")\r\n    const [year, setYear] = useState(\"\")\r\n    const [section, setSection] = useState(\"\")\r\n    const [subjectCode, setSubjectCode] = useState(\"\")\r\n    const [checkedValue, setCheckedValue] = useState([])\r\n    const [error, setError] = useState({})\r\n    const [flag, setFlag] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isLoading2, setIsLoading2] = useState(false)\r\n\r\n    const handleInputChange = (e) => {\r\n        const tempCheck = checkedValue\r\n        let index\r\n        if (e.target.checked)\r\n        {\r\n            tempCheck.push(e.target.value)\r\n        }\r\n        else {\r\n            index = tempCheck.indexOf(e.target.value)\r\n            tempCheck.splice(index,1)\r\n        }\r\n        setCheckedValue(tempCheck)\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if (store.error) {\r\n            setError(store.error)\r\n        }\r\n    }, [store.error])\r\n\r\n    const formHandler = (e) => {\r\n        e.preventDefault()\r\n        setIsLoading(true)\r\n        dispatch(fetchStudents(department, year, section))\r\n       \r\n    }\r\n\r\n    useEffect(() => {\r\n        if (store.error || !store.faculty.fetchedStudentsHelper) {\r\n            setIsLoading(false)\r\n        }\r\n        \r\n    }, [store.error, store.faculty.fetchedStudentsHelper])\r\n\r\n \r\n\r\n    const secondFormHandler = (e) => {\r\n        e.preventDefault()\r\n        setIsLoading2(true)\r\n        dispatch(markAttendence(checkedValue, subjectCode, department, year, section))\r\n        setCheckedValue([])\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        if (store.faculty.fetchedStudentsHelper) {\r\n            setIsLoading2(false)\r\n        }\r\n        \r\n    },[store.faculty.fetchedStudentsHelper])\r\n    \r\n    return (\r\n        <div>\r\n            {store.faculty.isAuthenticated ? <>\r\n                <FacultyHomeHelper />\r\n                {store.faculty.fetchedStudentsHelper && <div className=\"row justify-content-center mt-4 \">\r\n                    <div className=\"col-md-4\">\r\n                        <form noValidate onSubmit={formHandler}>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"branchId\">Department</label>\r\n                                <select onChange={(e) => setDepartment(e.target.value)} className={classnames(\"form-control\",\r\n                                    {\r\n                                        'is-invalid': error.department\r\n\r\n                                    })} id=\"branchId\">\r\n                                    <option>Select</option>\r\n                                    <option value={store.faculty.faculty.faculty.department}>{store.faculty.faculty.faculty.department}</option>\r\n                                </select>\r\n                                {error.department && (<div classNameName=\"invalid-feedback\">{error.department}</div>)}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"yearId\">Year</label>\r\n                                <select onChange={(e) => setYear(e.target.value)} className={classnames(\"form-control\",\r\n                                    {\r\n                                        'is-invalid': error.year\r\n\r\n                                    })} id=\"yearId\">\r\n                                    <option>Select</option>\r\n                                    <option value=\"1\">1</option>\r\n                                    <option value=\"2\">2</option>\r\n                                    <option value=\"3\">3</option>\r\n                                    <option value=\"4\">4</option>\r\n                                </select>\r\n\r\n                                {error.year && (<div classNameName=\"invalid-feedback\">{error.year}</div>)}\r\n                            </div>\r\n                           \r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"sectionId\">Section</label>\r\n                                <select onChange={(e) => setSection(e.target.value)} className={classnames(\"form-control\",\r\n                                    {\r\n                                        'is-invalid': error.section\r\n\r\n                                    })} id=\"sectionId\">\r\n                                    <option>Select</option>\r\n                                    <option value=\"A\">A</option>\r\n                                    <option value=\"B\">B</option>\r\n                                    <option value=\"C\">C</option>\r\n                                    <option value=\"D\">D</option>\r\n                                    <option value=\"E\">E</option>\r\n                                    <option value=\"F\">F</option>\r\n                                </select>\r\n                                {error.section && (<div classNameName=\"invalid-feedback\">{error.section}</div>)}\r\n                            </div>\r\n                            <div class=\"row justify-content-center\">\r\n                                <div class=\"col-md-1\">\r\n                                    {\r\n                                        isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\r\n                                            <span class=\"sr-only\">Loading...</span>\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            {!isLoading && <button type=\"submit\" className=\"btn btn-info  \">Search</button>}\r\n                        </form>\r\n                    </div>\r\n                </div>}\r\n\r\n\r\n                {!store.faculty.fetchedStudentsHelper && <div className=\"row  justify-content-center mt-4\">\r\n                    <div className=\"col-md-4\">\r\n                        <form onSubmit={secondFormHandler}>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"subjectId\">Subject Code</label>\r\n                                <select required onChange={(e) => setSubjectCode(e.target.value)} className=\"form-control\" id=\"subjectId\">\r\n                                    <option>Select</option>\r\n                                    {\r\n                                        store.faculty.allSubjectCodeList.map(subjectCodeName =>\r\n                                            <option>{subjectCodeName}</option>\r\n                                        )\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n                            <table className=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <td><div className=\"form-check\">\r\n                                            <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\" />\r\n                                        </div></td>\r\n                                        <th scope=\"col\">Registration Number</th>\r\n                                        <th scope=\"col\">Student Name</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        store.faculty.fetchedStudents.map((obj, index) =>\r\n                                            <tr>\r\n                                                <td><div className=\"form-check\">\r\n                                                    <input className=\"form-check-input\" type=\"checkbox\" value={obj._id} onChange={handleInputChange} id=\"defaultCheck1\" />\r\n                                                </div></td>\r\n                                                <td key={index}>{obj.registrationNumber}</td>\r\n                                                <td>{obj.name}</td>\r\n                                            </tr>\r\n                                        )\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n                            <div class=\"row justify-content-center\">\r\n                                <div class=\"col-md-1\">\r\n                                    {\r\n                                        isLoading2 && <div class=\"spinner-border text-primary\" role=\"status\">\r\n                                            <span class=\"sr-only\">Loading...</span>\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            {!isLoading2 && <button type=\"submit\" className=\"btn btn-info ml-1  \">Submit</button>}\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                }</> : (history.push('/'))}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AttendenceFaculty\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { adminLogout } from '../redux/action/adminAction'\r\n\r\n\r\nconst Home = () => {\r\n    const store = useSelector(store => store)\r\n    const [name, setName] = useState(\"\")\r\n    useEffect(() => {\r\n\r\n        if (store.admin.admin.name) {\r\n            setName(store.admin.admin.name)\r\n        }\r\n    }, [store.admin.admin.name])\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const logoutHandler = () => {\r\n        dispatch(adminLogout())\r\n        history.push('/')\r\n    }\r\n    return (\r\n        <div className=\"container-fluid\">\r\n          \r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <h4 className=\"navbar-brand mt-1\" href=\"\">SRM</h4>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                    <ul className=\"navbar-nav\">\r\n                        <li className=\"nav-item active\">\r\n                            <button type=\"button\" className=\"btn\"><Link to=\"/admin\"><li>{name.toUpperCase()}</li></Link></button>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <button type=\"button\" className=\"btn\"><Link to=\"/admin/addFaculty\"><li>ADD FACULTY</li></Link></button>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <button type=\"button\" className=\"btn\"><Link to=\"/admin/addStudent\"><li>ADD STUDENT</li></Link></button>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <button type=\"button\" className=\"btn\"><Link to=\"/admin/addSubject\"><li>ADD SUBJECT</li></Link></button>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <button type=\"button\" className=\"btn\"><Link to=\"/admin/addAdmin\"><li>ADD ADMIN</li></Link></button>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <button type=\"button\" className=\"btn\"><Link to=\"/admin/allFaculties\"><li>OUR FACULTIES</li></Link></button>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <button type=\"button\" className=\"btn\"><Link to=\"/admin/allStudents\"><li>OUR STUDENTS</li></Link></button>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <button type=\"button\" className=\"btn\"><Link to=\"/admin/allSubject\"><li>SUBJECTS</li></Link></button>\r\n                        </li>\r\n\r\n                    </ul>\r\n                </div>\r\n                <div>\r\n\r\n                    <button style={{ listStyle: \"None\" }} onClick={logoutHandler} type=\"button\" className=\"btn\"><li>LOGOUT</li></button>\r\n\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport classnames from 'classnames'\r\nimport { adminAddStudent } from '../redux/action/adminAction'\r\nimport AdminHomeHelper from '../Components/AdminHomeHelper'\r\n\r\n\r\nconst AdminAddStudent = () => {\r\n    const store = useSelector((store) => store)\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [department, setDepartment] = useState('')\r\n    const [year, setYear] = useState('')\r\n    const [section, setSection] = useState('')\r\n    const [dob, setDob] = useState('')\r\n    const [gender, setGender] = useState('')\r\n    const [studentMobileNumber, setContactNumber] = useState('')\r\n    const [fatherName, setFatherName] = useState('')\r\n    const [fatherMobileNumber, setFatherContactNumber] = useState('')\r\n    const [aadharCard, setAadharCard] = useState('')\r\n    const [error, setError] = useState({})\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n\r\n    useEffect(() => {\r\n        if (store.error) {\r\n            setError(store.error)\r\n        }\r\n    }, [store.error])\r\n    const formHandler = (e) => {\r\n        e.preventDefault()\r\n        setIsLoading(true)\r\n        dispatch(adminAddStudent({\r\n            name,\r\n            email,\r\n            year,\r\n            department,\r\n            fatherName,\r\n            aadharCard,\r\n            gender,\r\n            section: section.toUpperCase(),\r\n            dob: dob.split(\"-\").reverse().join(\"-\"),\r\n            studentMobileNumber,\r\n            fatherMobileNumber\r\n        }))\r\n    } \r\n    useEffect(() => {\r\n        if (store.admin.adminAddStudentFlag) {\r\n            setError({})\r\n        }\r\n    }, [store.admin.adminAddStudentFlag])\r\n\r\n    useEffect(() => {\r\n        if (store.error || store.admin.adminAddStudentFlag) {\r\n            setIsLoading(false)\r\n        }\r\n    }, [store.error, store.admin.adminAddStudentFlag])\r\n    return (\r\n        <div>\r\n            {store.admin.isAuthenticated ? <><AdminHomeHelper />\r\n                <div className=\"container mt-5\">\r\n                    <div className=\"row \">\r\n                        <div className=\"col\">\r\n                            <form noValidate onSubmit={formHandler}>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-6\">\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"nameId\">Student Name</label>\r\n                                            <input onChange={(e) => setName(e.target.value)} type=\"text\" className={classnames(\"form-control\",\r\n                                                {\r\n                                                    'is-invalid': error.name\r\n                                                })} id=\"nameId\" />\r\n                                            {error.name && (<div className=\"invalid-feedback\">{error.name}</div>)}\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"emailId\">Email</label>\r\n                                            <input onChange={(e) => setEmail(e.target.value)} type=\"email\" className={classnames(\"form-control\",\r\n                                                {\r\n                                                    'is-invalid': error.email\r\n                                                })} id=\"emailId\" />\r\n                                            {error.email && (<div className=\"invalid-feedback\">{error.email}</div>)}\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"departmentId\">Department</label>\r\n                                            <select onChange={(e) => setDepartment(e.target.value)} className={classnames(\"form-control\",\r\n                                                {\r\n                                                    'is-invalid': error.department\r\n                                                })} id=\"departmentId\">\r\n                                                <option>Select</option>\r\n                                                <option value=\"E.C.E\">E.C.E</option>\r\n                                                <option value=\"C.S.E\">C.S.E</option>\r\n                                                <option value=\"I.T\">I.T</option>\r\n                                                <option value=\"E.E.E\">E.E.E</option>\r\n                                                <option value=\"Mechanical\">Mechanical</option>\r\n                                                <option value=\"Civil\">Civil</option>\r\n                                            </select>\r\n                                            {error.department && (<div className=\"invalid-feedback\">{error.department}</div>)}\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"yearId\">Year</label>\r\n                                            <select onChange={(e) => setYear(e.target.value)} className={classnames(\"form-control\",\r\n                                                {\r\n                                                    'is-invalid': error.year\r\n                                                })} id=\"yearId\">\r\n                                                <option>Select</option>\r\n                                                <option value=\"1\">1</option>\r\n                                                <option value=\"2\">2</option>\r\n                                                <option value=\"3\">3</option>\r\n                                                <option value=\"4\">4</option>\r\n                                            </select>\r\n                                            {error.year && (<div className=\"invalid-feedback\">{error.year}</div>)}\r\n                                        </div>\r\n                                        \r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"sectionId\">Section</label>\r\n                                            <input onChange={(e) => setSection(e.target.value)} type=\"text\" className={classnames(\"form-control\",\r\n                                                {\r\n                                                    'is-invalid': error.section\r\n                                                })} id=\"sectionId\" />\r\n                                            {error.section && (<div className=\"invalid-feedback\">{error.section}</div>)}\r\n                                        </div>\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"dobId\">DOB</label>\r\n                                            <input onChange={(e) => setDob(e.target.value)} type=\"date\" className={classnames(\"form-control\",\r\n                                                {\r\n                                                    'is-invalid': error.dob\r\n                                                })} id=\"dobId\" />\r\n                                            {error.dob && (<div className=\"invalid-feedback\">{error.dob}</div>)}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-6\">\r\n                                        \r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"genderId\">Gender</label>\r\n                                            <select onChange={(e) => setGender(e.target.value)} class=\"form-control\" id=\"genderId\">\r\n                                                <option>Select</option>\r\n                                                <option value=\"Male\">Male</option>\r\n                                                <option value=\"Female\">Female</option>\r\n                                                <option value=\"Other\">Other</option>\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"numberId\">Contact Number</label>\r\n                                            <input onChange={(e) => setContactNumber(e.target.value)} required type=\"number\" class=\"form-control\" id=\"numberId\" />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"fatherId\">Father Name</label>\r\n                                            <input onChange={(e) => setFatherName(e.target.value)} type=\"text\" class=\"form-control\" id=\"fatherId\" />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"fathercnId\">Father Contact Number</label>\r\n                                            <input onChange={(e) => setFatherContactNumber(e.target.value)} type=\"number\" className=\"form-control\" id=\"fathercnId\" />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"aadharId\">Aadhar Card Number</label>\r\n                                            <input onChange={(e) => setAadharCard(e.target.value)} type=\"number\" className=\"form-control\" id=\"aadharId\" />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row justify-content-center\">\r\n                                    <div class=\"col-md-1\">\r\n                                        {\r\n                                            isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\r\n                                                <span class=\"sr-only\">Loading...</span>\r\n                                            </div>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                {!isLoading && <button type=\"submit\" className=\"btn btn-info  \">Add Student</button>}\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div></>:(history.push('/'))}\r\n            \r\n            </div>\r\n\r\n            \r\n      \r\n    )\r\n}\r\n\r\nexport default AdminAddStudent\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport classnames from 'classnames'\r\nimport { adminAddFaculty } from '../redux/action/adminAction'\r\nimport AdminHomeHelper from '../Components/AdminHomeHelper'\r\n\r\n\r\nconst AdminAddFaculty = () => {\r\n    const store = useSelector((state) => state)\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [department, setDepartment] = useState('')\r\n    const [designation, setDesignation] = useState('')\r\n    const [facultyMobileNUmber, setFacultyMobileNumber] = useState('')\r\n    const [dob, setDob] = useState('')\r\n    const [gender, setGender] = useState('')\r\n    const [aadharCard, setAadharCard] = useState('')\r\n    const [error, setError] = useState({})\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n\r\n    useEffect(() => {\r\n        if (store.error) {\r\n           setError(store.error)\r\n       }\r\n    }, [store.error])\r\n    const formHandler = (e) => {\r\n        e.preventDefault()\r\n        setIsLoading(true)\r\n        dispatch(adminAddFaculty({\r\n            name,\r\n            email,\r\n            designation,\r\n            facultyMobileNUmber,\r\n            department,\r\n            aadharCard,\r\n            gender,\r\n            dob: dob.split(\"-\").reverse().join(\"-\")}))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (store.admin.adminAddFacultyFlag) {\r\n            setError({})\r\n        }\r\n    }, [store.admin.adminAddFacultyFlag])\r\n\r\n    useEffect(() => {\r\n        if (store.error || store.admin.adminAddFacultyFlag) {\r\n            setIsLoading(false)\r\n        }\r\n        else {\r\n            setIsLoading(true)\r\n        }\r\n    },[store.error,store.admin.adminAddFacultyFlag])\r\n    return (\r\n       \r\n        <div>\r\n            {store.admin.isAuthenticated ? (<><AdminHomeHelper/>\r\n                <div className=\"container mt-5\">\r\n                    <div className=\"row \">\r\n                        <div className=\"col\">\r\n                            <form noValidate onSubmit={formHandler}>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-6\">\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"nameId\">Faculty Name</label>\r\n                                            <input onChange={(e) => setName(e.target.value)} type=\"text\" className={classnames(\"form-control\",\r\n                                                {\r\n                                                    'is-invalid': error.name\r\n                                                })} id=\"nameId\" />\r\n                                            {error.name && (<div className=\"invalid-feedback\">{error.name}</div>)}\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"emailId\">Email</label>\r\n                                            <input onChange={(e) => setEmail(e.target.value)} type=\"email\" className={classnames(\"form-control\",\r\n                                                {\r\n                                                    'is-invalid': error.email\r\n                                                })} id=\"emailId\" />\r\n                                            {error.email && (<div className=\"invalid-feedback\">{error.email}</div>)}\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"designationId\">Designation</label>\r\n                                            <select onChange={(e) => setDesignation(e.target.value)} className={classnames(\"form-control\",\r\n                                                {\r\n                                                    'is-invalid': error.designation\r\n                                                })} id=\"designationId\">\r\n                                                <option>Select</option>\r\n                                                <option value=\"Assistant Professor\">Assistant Professor</option>\r\n                                                <option value=\"Senior Professer\">Senior Professer</option>\r\n                                            </select>\r\n                                            {error.designation && (<div className=\"invalid-feedback\">{error.designation}</div>)}\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"departmentId\">Department</label>\r\n                                            <select onChange={(e) => setDepartment(e.target.value)} className={classnames(\"form-control\",\r\n                                                {\r\n                                                    'is-invalid': error.department\r\n                                                })} id=\"departmentId\">\r\n                                                <option>Select</option>\r\n                                                <option value=\"E.C.E\">E.C.E</option>\r\n                                                <option value=\"C.S.E\">C.S.E</option>\r\n                                                <option value=\"E.E.E\">E.E.E</option>\r\n                                                <option value=\"I.T\">I.T</option>\r\n                                                <option value=\"Mechanical\">Mechanical</option>\r\n                                                <option value=\"Civil\">Civil</option>\r\n                                            </select>\r\n                                            {error.department && (<div className=\"invalid-feedback\">{error.department}</div>)}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-6\">\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"dobId\">DOB</label>\r\n                                            <input onChange={(e) => setDob(e.target.value)} type=\"date\" className={classnames(\"form-control\",\r\n                                                {\r\n                                                    'is-invalid': error.dob\r\n                                                })} id=\"dobId\" />\r\n                                            {error.dob && (<div className=\"invalid-feedback\">{error.dob}</div>)}\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"genderId\">Gender</label>\r\n                                            <select onChange={(e) => setGender(e.target.value)} className=\"form-control\" id=\"genderId\">\r\n                                                <option>Select</option>\r\n                                                <option value=\"Male\">Male</option>\r\n                                                <option value=\"Female\">Female</option>\r\n                                                <option value=\"Other\">Other</option>\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"numberId\">Contact Number</label>\r\n                                            <input onChange={(e) => setFacultyMobileNumber(e.target.value)} type=\"number\" className=\"form-control\" id=\"numberId\" />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"aadharId\">Aadhar Card Number</label>\r\n                                            <input onChange={(e) => setAadharCard(e.target.value)} type=\"number\" className=\"form-control\" id=\"aadharId\" />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row justify-content-center\">\r\n                                    <div class=\"col-md-1\">\r\n                                        {\r\n                                            isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\r\n                                                <span class=\"sr-only\">Loading...</span>\r\n                                            </div>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                {!isLoading && <button type=\"submit\" className=\"btn btn-info\">Add Faculty</button>}\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div></>):(history.push('/'))}\r\n            \r\n        </div>\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default AdminAddFaculty\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport classnames from 'classnames'\r\nimport { adminAddSubject } from '../redux/action/adminAction'\r\nimport AdminHomeHelper from '../Components/AdminHomeHelper'\r\n\r\nconst AdminAddSubject = () => {\r\n    const store = useSelector((store) => store)\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const [subjectName, setSubjectName] = useState('')\r\n    const [subjectCode, setSubjectCode] = useState('')\r\n    const [totalLectures, setTotalLectures] = useState('')\r\n    const [department, setDepartment] = useState('')\r\n    const [year, setYear] = useState('')\r\n    const [error, setError] = useState({})\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n\r\n    useEffect(() => {\r\n        if (store.error) {\r\n            setError(store.error)\r\n        }\r\n    }, [store.error])\r\n    const formHandler = (e) => {\r\n        e.preventDefault()\r\n        setIsLoading(true)\r\n        dispatch(adminAddSubject({\r\n            subjectCode,\r\n            subjectName,\r\n            totalLectures,\r\n            department,\r\n            year\r\n        }))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (store.admin.adminAddSubjectFlag) {\r\n            setError({})\r\n        }\r\n    }, [store.admin.adminAddSubjectFlag])\r\n\r\n    useEffect(() => {\r\n        if (store.error || store.admin.adminAddSubjectFlag) {\r\n            setIsLoading(false)\r\n        }\r\n    }, [store.error, store.admin.adminAddSubjectFlag])\r\n\r\n    return (\r\n        <div>\r\n            {store.admin.isAuthenticated ? <> <AdminHomeHelper />\r\n                <div className=\"container mt-5\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-md-4\">\r\n                            <div className=\"d-flex justify-content-md-center vh-100\">\r\n                                <form noValidate onSubmit={formHandler}>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"snameId\">Subject Name</label>\r\n                                        <input onChange={(e) => setSubjectName(e.target.value)} type=\"text\" className={classnames(\"form-control\",\r\n                                            {\r\n                                                'is-invalid': error.subjectName\r\n                                            })} id=\"snameId\" />\r\n                                        {error.subjectName && (<div className=\"invalid-feedback\">{error.subjectName}</div>)}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"scodeId\">Subject Code</label>\r\n                                        <input onChange={(e) => setSubjectCode(e.target.value)} type=\"text\" className={classnames(\"form-control\",\r\n                                            {\r\n                                                'is-invalid': error.subjectCode\r\n                                            })} id=\"scodeId\" />\r\n                                        {error.subjectCode && (<div className=\"invalid-feedback\">{error.subjectCode}</div>)}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"totalLectures\">Total Lectures</label>\r\n                                        <input onChange={(e) => setTotalLectures(e.target.value)} type=\"number\" className={classnames(\"form-control\",\r\n                                            {\r\n                                                'is-invalid': error.totalLectures\r\n                                            })} id=\"totalLectures\" />\r\n                                        {error.totalLectures && (<div className=\"invalid-feedback\">{error.totalLectures}</div>)}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"departmentId\">Department</label>\r\n                                        <select onChange={(e) => setDepartment(e.target.value)} className={classnames(\"form-control\",\r\n                                            {\r\n                                                'is-invalid': error.department\r\n                                            })} id=\"departmentId\">\r\n                                            <option>Select</option>\r\n                                            <option value=\"E.C.E\">E.C.E</option>\r\n                                            <option value=\"E.E.E\">E.E.E</option>\r\n                                            <option value=\"C.S.E\">C.S.E</option>\r\n                                            <option value=\"I.T\">I.T</option>\r\n                                            <option value=\"Mechanical\">Mechanical</option>\r\n                                            <option value=\"Civil\">Civil</option>\r\n                                        </select>\r\n                                        {error.department && (<div className=\"invalid-feedback\">{error.department}</div>)}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"yearId\">Year</label>\r\n                                        <select onChange={(e) => setYear(e.target.value)} className={classnames(\"form-control\",\r\n                                            {\r\n                                                'is-invalid': error.year\r\n\r\n                                            })} id=\"yearId\">\r\n                                            <option>Select</option>\r\n                                            <option value=\"1\">1</option>\r\n                                            <option value=\"2\">2</option>\r\n                                            <option value=\"3\">3</option>\r\n                                            <option value=\"4\">4</option>\r\n                                        </select>\r\n\r\n                                        {error.year && (<div className=\"invalid-feedback\">{error.year}</div>)}\r\n                                    </div>\r\n                                    <div class=\"row justify-content-center\">\r\n                                        <div class=\"col-md-1\">\r\n                                            {\r\n                                                isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\r\n                                                    <span class=\"sr-only\">Loading...</span>\r\n                                                </div>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                    {!isLoading && <button type=\"submit\" className=\"btn btn-info  \">Add Subject</button>}\r\n                                   \r\n                                    \r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div></>: (history.push('/'))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminAddSubject\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {fetchAttendence} from '../redux/action/studentAction'\r\n\r\nimport axios from 'axios'\r\nimport HomeHelper from '../Components/HomeHelper'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst Home = () => {\r\n    const store = useSelector(store => store)\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    useEffect(() => {\r\n      dispatch(fetchAttendence())  \r\n    },[])\r\n\r\n    return (\r\n        <div>\r\n            {store.student.isAuthenticated ? <>\r\n                <HomeHelper />\r\n                <div className=\"container\">\r\n                    <div className=\"row mt-5\">\r\n                        <div className=\"col-md-6 m-auto\">\r\n                            <table className=\"table border\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">S.No</th>\r\n                                        <th scope=\"col\">Subject Code</th>\r\n                                        <th scope=\"col\">Subject Name</th>\r\n                                        <th scope=\"col\">Maximum Hours</th>\r\n                                        <th scope=\"col\">Present Hours</th>\r\n                                        <th scope=\"col\">Absent Hours</th>\r\n                                        <th scope=\"col\">Total Hours</th>\r\n                                        <th scope=\"col\">Attendence</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        store.student.attendence.map((res, index) =>\r\n                                            <tr key={index}>\r\n                                                <th scope=\"row\">{index + 1}</th>\r\n                                                <td>{res.subjectCode}</td>\r\n                                                <td>{res.subjectName}</td>\r\n                                                <td>{res.maxHours}</td>\r\n                                                <td>{res.lectureAttended}</td>\r\n                                                <td>{res.absentHours}</td>\r\n                                                <td>{res.totalLecturesByFaculty}</td>\r\n                                                <td>{res.attendence}%</td>\r\n                                            </tr>\r\n                                        )\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </> : (history.push('/'))}\r\n           \r\n            \r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport { facultyLogin } from '../redux/action/facultyAction'\r\nimport { studentLogin } from '../redux/action/studentAction'\r\nimport classnames from 'classnames'\r\nimport LoginPage from './LoginPage'\r\n\r\nimport '../Style/facultyStudentLogin.css'\r\n\r\n\r\n\r\n\r\nconst FacultyStudentLoginPags = () => {\r\n    const store = useSelector((state) => state)\r\n    const dispatch = useDispatch()\r\n    const [facultyRegNum, setFacultyRegNum] = useState('')\r\n    const [facultyPassword, setFacultyPassword] = useState('')\r\n    const [studentRegNum, setStudentRegNum] = useState('')\r\n    const [studentPassword, setStudentPassword] = useState('')\r\n    const [errors, setErrors] = useState({})\r\n    const [errorsHelper, setErrorsHelper] = useState({})\r\n    const [isFacultyLoading, setIsFacultyLoading] = useState(false)\r\n    const [isStudentLoading, setIsStudentLoading] = useState(false)\r\n\r\n\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        if (store.faculty.isAuthenticated) {\r\n            history.push('/faculty')\r\n        }\r\n    }, [store.faculty.isAuthenticated])\r\n\r\n    useEffect(() => {\r\n        if (store.error) {\r\n            setErrors(store.error)\r\n        }\r\n    }, [store.error])\r\n    useEffect(() => {\r\n        if (store.student.isAuthenticated) {\r\n            history.push('/home')\r\n        }\r\n    }, [store.student.isAuthenticated])\r\n\r\n    useEffect(() => {\r\n        if (store.errorHelper) {\r\n            setErrorsHelper(store.errorHelper)\r\n        }\r\n    }, [store.errorHelper])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const facultyFormHandler = (e) => {\r\n        e.preventDefault()\r\n        let registrationNumber;\r\n        let password;\r\n        setIsFacultyLoading(true)\r\n        dispatch(facultyLogin({ registrationNumber: facultyRegNum, password: facultyPassword }))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (store.error || store.faculty.isAuthenticated) {\r\n            setIsFacultyLoading(false)\r\n        }\r\n        else {\r\n            setIsFacultyLoading(true)\r\n        }\r\n    }, [store.error, store.faculty.isAuthenticated])\r\n\r\n    const studentFormHandler = (e) => {\r\n        e.preventDefault()\r\n        let registrationNumber;\r\n        let password;\r\n        setIsStudentLoading(true)\r\n        dispatch(studentLogin({ registrationNumber: studentRegNum, password: studentPassword }))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (store.errorHelper ||\r\n            store.student.isAuthenticated) {\r\n            setIsStudentLoading(false)\r\n        }\r\n        else {\r\n            setIsStudentLoading(false)\r\n        }\r\n\r\n    }, [store.errorHelper, store.student.isAuthenticated])\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\" id=\"trail\">\r\n                <div className=\"col-md-6\">\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"row m-5\">\r\n                        <LoginPage/>\r\n                        <div className=\"col-md-8 m-auto border\" style={{ backgroundColor: \"white\", borderRadius: \"1.2rem\", padding: \"1rem 1rem 0rem 1rem\" }}>\r\n                            <div>\r\n                                <h3 className=\"text-center \">FACULTY</h3>\r\n                                <form noValidate onSubmit={facultyFormHandler}>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"facRegId\">Registration Number</label>\r\n                                        <input onChange={(e) => setFacultyRegNum(e.target.value)} type=\"text\" value={facultyRegNum} className={classnames('form-control', {\r\n                                            'is-invalid': errors.registrationNumber\r\n                                        })}\r\n                                            id=\"facRegId\" />\r\n                                        {errors.registrationNumber && (\r\n                                            <div className=\"invalid-feedback\">{errors.registrationNumber}</div>\r\n                                        )}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"passwordFacId\">Password</label>\r\n                                        <input onChange={(e) => setFacultyPassword(e.target.value)} value={facultyPassword} className={classnames(\"form-control\", {\r\n                                            'is-invalid': errors.password\r\n                                        })}\r\n                                            type=\"password\" id=\"passwordFacId\" />\r\n                                        {errors.password && (\r\n                                            <div className=\"invalid-feedback\">{errors.password}</div>\r\n                                        )}\r\n                                    </div>\r\n                                    <div class=\"row justify-content-center\">\r\n                                        <div class=\"col-md-1\">\r\n                                            {\r\n                                                isFacultyLoading && <div class=\"spinner-border text-primary\" role=\"status\">\r\n                                                    <span class=\"sr-only\">Loading...</span>\r\n                                                </div>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {!isFacultyLoading && <button type=\"submit\" className=\"btn btn-info btn-block\">Login</button>}\r\n                                </form>\r\n                                <p className=\"text-center mt-2 \"><Link className=\"text-center\" to=\"/forgotPassword/faculty\">Forgot Password</Link></p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row m-5\">\r\n                        <div className=\"col-md-8 m-auto border\" style={{ backgroundColor: \"white\", borderRadius: \"1.2rem\", padding: \"1rem 1rem 0rem 1rem\" }}>\r\n                            <div>\r\n                                <h3 className=\"text-center\">STUDENT</h3>\r\n                                <form noValidate onSubmit={studentFormHandler}>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"studentId\">Registration Number</label>\r\n                                        <input onChange={(e) => setStudentRegNum(e.target.value)} type=\"text\" value={studentRegNum} className={classnames('form-control', {\r\n                                            'is-invalid': errorsHelper.registrationNumber\r\n                                        })}\r\n                                            id=\"studentId\" />\r\n                                        {errorsHelper.registrationNumber && (\r\n                                            <div className=\"invalid-feedback\">{errorsHelper.registrationNumber}</div>\r\n                                        )}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"passwordId\">Password</label>\r\n                                        <input onChange={(e) => setStudentPassword(e.target.value)} value={studentPassword} className={classnames(\"form-control\", {\r\n                                            'is-invalid': errorsHelper.password\r\n                                        })}\r\n                                            type=\"password\" id=\"passwordId\" />\r\n                                        {errorsHelper.password && (\r\n                                            <div className=\"invalid-feedback\">{errorsHelper.password}</div>\r\n                                        )}\r\n                                    </div>\r\n                                    <div class=\"row justify-content-center\">\r\n                                        <div class=\"col-md-1\">\r\n                                            {\r\n                                                isStudentLoading && <div class=\"spinner-border text-primary\" role=\"status\">\r\n                                                    <span class=\"sr-only\">Loading...</span>\r\n                                                </div>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                    {!isStudentLoading && <button type=\"submit\" className=\"btn btn-info btn-block \">Login</button>}\r\n\r\n                                </form>\r\n                                <p className=\"text-center\"><Link className=\"text-center\" to=\"/forgotPassword/student\">Forgot Password</Link></p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FacultyStudentLoginPags\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport classnames from 'classnames'\r\nimport HomeHelper from '../Components/HomeHelper'\r\nimport { studentUpdatePassword } from '../redux/action/studentAction'\r\n\r\n\r\n\r\n\r\nconst StudentUpdatePassword = () => {\r\n    const store = useSelector((store) => store)\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const [oldPassword, setOldPassword] = useState('')\r\n    const [newPassword, setNewPassword] = useState('')\r\n    const [confirmNewPassword, setConfirmNewPassword] = useState('')\r\n    const [error, setError] = useState({})\r\n\r\n    useEffect(() => {\r\n        if (store.errorHelper) {\r\n            setError(store.errorHelper)\r\n            console.log(store.errorHelper)\r\n        }\r\n    }, [store.errorHelper])\r\n    const formHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(studentUpdatePassword({ registrationNumber: store.student.student.student.registrationNumber, oldPassword, newPassword, confirmNewPassword }))\r\n    }\r\n    return (\r\n        <div>\r\n            {store.student.isAuthenticated ? <>\r\n                <HomeHelper />\r\n                <div className=\"container m-5\">\r\n                    <div className=\"row m-5\">\r\n                        <div className=\"col-md-5 m-auto\">\r\n                            <form noValidate onSubmit={formHandler}>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"emailId\">Old Password</label>\r\n                                    <input onChange={(e) => setOldPassword(e.target.value)} type=\"password\" value={oldPassword} className={classnames(\"form-control\",\r\n                                        {\r\n                                            'is-invalid': error.oldPassword\r\n\r\n                                        })} id=\"emailId\" />\r\n                                    {error.oldPassword && (<div className=\"invalid-feedback\">{error.oldPassword}</div>)}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"passwordId\">New Password</label>\r\n                                    <input onChange={(e) => setNewPassword(e.target.value)} value={newPassword} className={classnames(\"form-control\", {\r\n                                        \"is-invalid\": error.newPassword\r\n                                    })} value={newPassword} type=\"password\" id=\"passwordId\" />\r\n                                    {error.newPassword && (<div className=\"invalid-feedback\">{error.newPassword}</div>)}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"passwordCId\">Confirm New Password</label>\r\n                                    <input onChange={(e) => setConfirmNewPassword(e.target.value)} value={confirmNewPassword} className={classnames(\"form-control\", {\r\n                                        \"is-invalid\": error.confirmNewPassword\r\n                                    })} value={confirmNewPassword} type=\"password\" id=\"passwordCId\" />\r\n                                    {error.confirmNewPassword && (<div className=\"invalid-feedback\">{error.confirmNewPassword}</div>)}\r\n                                </div>\r\n                                <button type=\"submit\" class=\"btn btn-info btn-block \">Update Password</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div></> : (history.push('/'))}\r\n\r\n           \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StudentUpdatePassword\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport classnames from 'classnames'\r\nimport FacultyHomeHelper from '../Components/FacultyHomeHelper'\r\nimport { facultyUpdatePassword } from '../redux/action/facultyAction'\r\n\r\n\r\n\r\n\r\nconst FacultyUpdatePassword = () => {\r\n    const store = useSelector((store) => store)\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const [oldPassword, setOldPassword] = useState('')\r\n    const [newPassword, setNewPassword] = useState('')\r\n    const [confirmNewPassword, setConfirmNewPassword] = useState('')\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [error, setError] = useState({})\r\n\r\n    useEffect(() => {\r\n        if (store.error) {\r\n            setError(store.error)\r\n        }\r\n    }, [store.error])\r\n    const formHandler = (e) => {\r\n        e.preventDefault()\r\n        setIsLoading(true)\r\n        dispatch(facultyUpdatePassword({ registrationNumber: store.faculty.faculty.faculty.registrationNumber, oldPassword, newPassword, confirmNewPassword }))\r\n    }\r\n    useEffect(() => {\r\n        \r\n    }, [store.faculty])\r\n    return (\r\n        <div>\r\n            {store.faculty.isAuthenticated ? <>\r\n                <FacultyHomeHelper />\r\n                <div className=\"container m-5\">\r\n                    <div className=\"row m-5\">\r\n                        <div className=\"col-md-6 m-auto\">\r\n                            <form noValidate onSubmit={formHandler}>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"emailId\">Old Password</label>\r\n                                    <input onChange={(e) => setOldPassword(e.target.value)} type=\"password\" value={oldPassword} className={classnames(\"form-control\",\r\n                                        {\r\n                                            'is-invalid': error.oldPassword\r\n\r\n                                        })} id=\"emailId\" />\r\n                                    {error.oldPassword && (<div classNameName=\"invalid-feedback\">{error.oldPassword}</div>)}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"passwordId\">New Password</label>\r\n                                    <input onChange={(e) => setNewPassword(e.target.value)} value={newPassword} className={classnames(\"form-control\", {\r\n                                        \"is-invalid\": error.newPassword\r\n                                    })} type=\"password\" id=\"passwordId\" />\r\n                                    {error.newPassword && (<div classNameName=\"invalid-feedback\">{error.newPassword}</div>)}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"passwordCId\">Confirm New Password</label>\r\n                                    <input onChange={(e) => setConfirmNewPassword(e.target.value)} value={confirmNewPassword} className={classnames(\"form-control\", {\r\n                                        \"is-invalid\": error.confirmNewPassword\r\n                                    })} type=\"password\" id=\"passwordCId\" />\r\n                                    {error.confirmNewPassword && (<div classNameName=\"invalid-feedback\">{error.confirmNewPassword}</div>)}\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-info btn-block \">Update Password</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n</> : (history.push('/'))}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FacultyUpdatePassword\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { withRouter, useHistory } from 'react-router-dom';\r\nimport { getOTPStudent, submitOTPStudent } from '../redux/action/studentAction'\r\nimport { getOTPFaculty, submitOTPFaculty } from '../redux/action/facultyAction'\r\nimport classnames from 'classnames'\r\n\r\n\r\nconst ForgotPassword = (props) => {\r\n    const store = useSelector((store) => store)\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const [user, setUser] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [otp, setOtp] = useState('')\r\n    const [newPassword, setNewPassword] = useState('')\r\n    const [confirmNewPassword, setConfirmNewPassword] = useState(\"\")\r\n    const [errors, setErrors] = useState({})\r\n    const [helper, setHelper] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setUser(props.match.params.user)\r\n    }, [user])\r\n\r\n    useEffect(() => {\r\n        if (store.error) {\r\n            setErrors(store.error)\r\n        }\r\n    }, [store.error])\r\n\r\n    useEffect(() => {\r\n        if (store.student.flag) {\r\n            setHelper(true)\r\n        }\r\n    },[store.student.flag])\r\n\r\n    const sendOTPHandler = (e) => {\r\n        e.preventDefault()\r\n        if (user === \"student\") {\r\n            dispatch(getOTPStudent({ email }))\r\n        }\r\n        else if (user === \"faculty\") {\r\n           dispatch(getOTPFaculty({email}))\r\n        }\r\n    }\r\n\r\n    const submitOTPHandler = (e) => {\r\n        e.preventDefault()\r\n        if (user === \"student\") {\r\n            dispatch(submitOTPStudent({ email, otp, newPassword, confirmNewPassword },history))\r\n        }\r\n        else if (user === \"faculty\")\r\n        {\r\n            dispatch(submitOTPFaculty({ email, otp, newPassword, confirmNewPassword }, history))\r\n            }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4 m-auto\">\r\n                    {!helper ? <>\r\n                        <form noValidate onSubmit={sendOTPHandler}>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"exampleInputEmail11\">Email</label>\r\n                                <input onChange={(e) => setEmail(e.target.value)} value={email} type=\"email\" className={classnames('form-control', {\r\n                                    'is-invalid': errors.email\r\n                                })} id=\"exampleInputEmail11\" placeholder=\"Provide our registered email\" aria-describedby=\"emailHelp\" />\r\n                                <small id=\"emailHelp\" className=\"form-text text-muted\">OTP will be only valid for 5 minute.</small>\r\n                                {errors.email && (\r\n                                    <div className=\"invalid-feedback\">{errors.email}</div>\r\n                                )}\r\n                            </div>\r\n                            <button type=\"submit\" className=\"btn btn-primary\">Send OTP</button>\r\n                        </form>\r\n                    </> : <>\r\n                            <form noValidate onSubmit={submitOTPHandler}>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"exampleInputEmail1\">OTP</label>\r\n                                    <input onChange={(e) => setOtp(e.target.value)} value={otp} type=\"number\" className={classnames('form-control', {\r\n                                        'is-invalid': errors.otp\r\n                                    })} id=\"exampleInputEmail1\" />\r\n                                    {errors.otp && (\r\n                                        <div className=\"invalid-feedback\">{errors.otp}</div>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"exampleInputEmail2\">New Password</label>\r\n                                    <input onChange={(e) => setNewPassword(e.target.value)} value={newPassword} type=\"password\" className={classnames('form-control', {\r\n                                        'is-invalid': errors.newPassword\r\n                                    })} id=\"exampleInputEmail2\" />\r\n                                    {errors.newPassword && (\r\n                                        <div className=\"invalid-feedback\">{errors.newPassword}</div>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"exampleInputEmail3\">Confirm New Password</label>\r\n                                    <input onChange={(e) => setConfirmNewPassword(e.target.value)} value={confirmNewPassword} type=\"password\" className={classnames('form-control', {\r\n                                        'is-invalid': errors.confirmNewPassword\r\n                                    })} id=\"exampleInputEmail3\" />\r\n                                    {errors.confirmNewPassword && (\r\n                                        <div className=\"invalid-feedback\">{errors.confirmNewPassword}</div>\r\n                                    )}\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                            </form>\r\n                        </>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(ForgotPassword)\r\n","import React, {useState, useEffect} from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { getStudentByRegName } from '../redux/action/studentAction'\r\nimport HomeHelper from '../Components/HomeHelper'\r\n\r\nconst RecieverUserDetails = (props) => {\r\n    const store = useSelector((store) => store)\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    const [registrationNumber, setRegistrationNumber] = useState(\"\")\r\n  \r\n\r\n\r\n    useEffect(() => {\r\n        setRegistrationNumber(props.match.params.registrationNumber)\r\n        dispatch(getStudentByRegName(registrationNumber))\r\n        \r\n    }, [registrationNumber]) \r\n\r\n\r\n    return (\r\n        <div>\r\n            {store.student.isAuthenticated ? <>\r\n                <HomeHelper />\r\n                <div className=\"container\">\r\n                    <div className=\"row mt-5\">\r\n                        <div className=\"col-md-2\">\r\n\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-5\">\r\n                                    <div className=\"card\" style={{ width: \"18rem\" }}>\r\n                                        <img className=\"card-img-top\" src={store.student.regNumStudent.avatar} alt=\"Card image cap\" />\r\n                                        <div className=\"card-body\">\r\n                                            <h5 className=\"card-title\">{store.student.regNumStudent.name}</h5>\r\n                                            <h5 className=\"card-title\">{}</h5>\r\n                                            <Link to={`/chat/${store.student.regNumStudent.registrationNumber}.${store.student.student.student.registrationNumber}`}>CHAT</Link>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-7\">\r\n                                    <table className=\"table border\">\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>Name</td>\r\n                                                <td>{store.student.regNumStudent.name}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Email</td>\r\n                                                <td>{store.student.regNumStudent.email}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Registration Number</td>\r\n                                                <td>{store.student.regNumStudent.registrationNumber}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Year</td>\r\n                                                <td>{store.student.regNumStudent.year}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Department</td>\r\n                                                <td>{store.student.regNumStudent.department}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Section</td>\r\n                                                <td>{store.student.regNumStudent.section}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Batch</td>\r\n                                                <td>{store.student.regNumStudent.batch}</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n            </> : (history.push('/'))}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default RecieverUserDetails\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\n\r\nimport { studentUpdate, studentLogout,newerChats, previousChats } from '../redux/action/studentAction'\r\nimport HomeHelper from '../Components/HomeHelper'\r\n\r\nimport { useHistory, withRouter } from 'react-router-dom'\r\n\r\nconst StudentUpdateProfile = () => {\r\n    const store = useSelector((store) => store)\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const [gender, setGender] = useState('')\r\n    const [studentMobileNumber, setContactNumber] = useState('')\r\n    const [fatherName, setFatherName] = useState('')\r\n    const [fatherMobileNumber, setFatherContactNumber] = useState('')\r\n    const [aadharCard, setAadharCard] = useState('')\r\n    const [error, setError] = useState({})\r\n    const [avatar, setAvatar] = useState('')\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [modal, setModal] = useState(false)\r\n    const imagehandler = (e) => {\r\n        if (e.target.files && e.target.files[0]) {\r\n            let img = e.target.files[0]\r\n            setAvatar(img)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (store.error) {\r\n            setError(store.error)\r\n        }\r\n    }, [store.error])\r\n\r\n    const formHandler = async(e) => {\r\n        e.preventDefault()\r\n        const formData = new FormData()\r\n        formData.append(\"gender\", gender)\r\n        formData.append(\"studentMobileNumber\", studentMobileNumber)\r\n        formData.append(\"fatherName\", fatherName)\r\n        formData.append(\"fatherMobileNumber\", fatherMobileNumber)\r\n        formData.append(\"aadharCard\", aadharCard)\r\n        formData.append(\"avatar\", avatar)\r\n        formData.append(\"email\", store.student.student.student.email)\r\n        dispatch(studentUpdate(formData, history))\r\n        setModal(true)\r\n        alert(\"Kindly login again to see updates\")\r\n        dispatch(studentLogout())\r\n        history.push('/')\r\n    }\r\n        return (\r\n            <div>\r\n                {store.student.isAuthenticated ? <>\r\n                    <HomeHelper />\r\n                    <div className=\"container mt-5\">\r\n                        <div className=\"row \">\r\n                            <div className=\"col-md-5 w-100 m-auto\">\r\n                                <form onSubmit={formHandler}>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"inputId\">Profile Picture</label>\r\n                                        <input required className=\"form-control\" type=\"file\" accept=\".jpg,.png,.jpeg\" id=\"inputId\" onChange={imagehandler}></input>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"genderId\">Gender</label>\r\n                                        <select onChange={(e) => setGender(e.target.value)} className=\"form-control\" id=\"genderId\">\r\n                                            <option>Select</option>\r\n                                            <option value=\"Male\">Male</option>\r\n                                            <option value=\"Female\">Female</option>\r\n                                            <option value=\"Other\">Other</option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"numberId\">Contact Number</label>\r\n                                        <input onChange={(e) => setContactNumber(e.target.value)} required type=\"number\" className=\"form-control\" id=\"numberId\" />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"fatherId\">Father Name</label>\r\n                                        <input onChange={(e) => setFatherName(e.target.value)} type=\"text\" className=\"form-control\" id=\"fatherId\" />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"fathercnId\">Father Contact Number</label>\r\n                                        <input onChange={(e) => setFatherContactNumber(e.target.value)} type=\"number\" className=\"form-control\" id=\"fathercnId\" />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"aadharId\">Aadhar Card Number</label>\r\n                                        <input onChange={(e) => setAadharCard(e.target.value)} type=\"number\" className=\"form-control\" id=\"aadharId\" />\r\n                                    </div>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\">Update</button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </> : (history.push('/'))}\r\n                \r\n            </div>\r\n        )\r\n    }\r\n\r\nexport default withRouter(StudentUpdateProfile)\r\n","import React, {useState, useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getAllSubjects } from '../../redux/action/studentAction'\r\nimport HomeHelper from '../../Components/HomeHelper'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst StudentSubjectList = () => {\r\n    const store = useSelector((store) => store)\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n       dispatch(getAllSubjects())\r\n    },[])\r\n    return (\r\n        <>\r\n            {store.student.isAuthenticated ? <>\r\n                <HomeHelper />\r\n                <div className=\"container\">\r\n                    <div className=\"row mt-5\">\r\n                        <div className=\"col-md-6 m-auto\">\r\n                            <table className=\"table border\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">S.No</th>\r\n                                        <th scope=\"col\">Subject Code</th>\r\n                                        <th scope=\"col\">Subject Name</th>\r\n                                        <th scope=\"col\">Year</th>\r\n                                        <th scope=\"col\">Total Lectures</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        store.student.allSubjects.map((res, index) =>\r\n                                            <tr key={index}>\r\n                                                <th scope=\"row\">{index + 1}</th>\r\n                                                <td>{res.subjectCode}</td>\r\n                                                <td>{res.subjectName}</td>\r\n                                                <td>{res.year}</td>\r\n                                                <td>{res.totalLectures}</td>\r\n                                            </tr>\r\n                                        )\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div></> : (history.push('/'))}\r\n           \r\n            </>\r\n    )\r\n}\r\n\r\nexport default StudentSubjectList\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport classnames from 'classnames'\r\nimport { fetchStudents, uploadMarks } from '../../redux/action/facultyAction'\r\nimport FacultyHomeHelper from '../../Components/FacultyHomeHelper'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\n\r\nconst FacultyUploadMarks = () => {\r\n    const store = useSelector((store) => store)\r\n    const history = useHistory()\r\n    const dispatch = useDispatch() \r\n    const [department, setDepartment] = useState(\"\")\r\n    const [year, setYear] = useState(\"\")\r\n    const [marks, setMarks] = useState([])\r\n    const [section, setSection] = useState(\"\")\r\n    const [subjectCode, setSubjectCode] = useState(\"\")\r\n    const [totalMarks, setTotalMarks] = useState()\r\n    const [exam ,setExam] = useState(\"\")\r\n    const [error, setError] = useState({})\r\n    const [errorHelper, setErrorHelper] = useState({})\r\n\r\n   \r\n\r\n\r\n    const handleInputChange = (value, _id) => {\r\n    \r\n        const newMarks = [...marks]\r\n        let index = newMarks.findIndex(m => m._id === _id)\r\n        if (index === -1) {\r\n            newMarks.push({ _id, value })\r\n        }\r\n        else {\r\n           newMarks[index].value = value\r\n        }\r\n        setMarks(newMarks)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (store.error) {\r\n            setError(store.error)\r\n        }\r\n    }, [store.error])\r\n\r\n    useEffect(() => {\r\n        if (store.errorHelper) {\r\n            setErrorHelper(store.errorHelper)\r\n        }\r\n    }, [store.errorHelper])\r\n\r\n    const formHandler = (e) => {\r\n        e.preventDefault()\r\n    \r\n       dispatch(fetchStudents(department, year,  section))\r\n\r\n    }\r\n\r\n\r\n\r\n    const secondFormHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(uploadMarks(subjectCode, exam, totalMarks, marks, department, section\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {store.faculty.isAuthenticated ? <>\r\n                <FacultyHomeHelper />\r\n                {store.faculty.fetchedStudentsHelper && <div className=\"row justify-content-center mt-4 \">\r\n                    <div className=\"col-md-4\">\r\n                        <form noValidate onSubmit={formHandler}>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"branchId\">Department</label>\r\n                                <select onChange={(e) => setDepartment(e.target.value)} className={classnames(\"form-control\",\r\n                                    {\r\n                                        'is-invalid': error.department\r\n\r\n                                    })} id=\"bramchId\">\r\n                                    <option>Select</option>\r\n                                    <option value={store.faculty.faculty.faculty.department}>{store.faculty.faculty.faculty.department}</option>\r\n                                </select>\r\n                                {error.department && (<div classNameName=\"invalid-feedback\">{error.department}</div>)}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"yearId\">Year</label>\r\n                                <select onChange={(e) => setYear(e.target.value)} className={classnames(\"form-control\",\r\n                                    {\r\n                                        'is-invalid': error.year\r\n\r\n                                    })} id=\"yearId\">\r\n                                    <option>Select</option>\r\n                                    <option value=\"1\">1</option>\r\n                                    <option value=\"2\">2</option>\r\n                                    <option value=\"3\">3</option>\r\n                                    <option value=\"4\">4</option>\r\n                                </select>\r\n\r\n                                {error.year && (<div classNameName=\"invalid-feedback\">{error.year}</div>)}\r\n                            </div>\r\n                            {/* <div className=\"form-group\">\r\n                                <label htmlFor=\"semesterId\">Semester</label>\r\n                                <select onChange={(e) => setSemester(e.target.value)} className={classnames(\"form-control\",\r\n                                    {\r\n                                        'is-invalid': error.semester\r\n\r\n                                    })} id=\"semesterId\">\r\n                                    <option>Select</option>\r\n                                    <option value=\"1\">1</option>\r\n                                    <option value=\"2\">2</option>\r\n                                    <option value=\"3\">3</option>\r\n                                    <option value=\"4\">4</option>\r\n                                    <option value=\"5\">5</option>\r\n                                    <option value=\"6\">6</option>\r\n                                    <option value=\"7\">7</option>\r\n                                    <option value=\"8\">8</option>\r\n                                </select>\r\n                                {error.year && (<div classNameName=\"invalid-feedback\">{error.year}</div>)}\r\n                            </div> */}\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"sectionId\">Section</label>\r\n                                <select onChange={(e) => setSection(e.target.value)} className={classnames(\"form-control\",\r\n                                    {\r\n                                        'is-invalid': error.section\r\n\r\n                                    })} id=\"sectionId\">\r\n                                    <option>Select</option>\r\n                                    <option value=\"A\">A</option>\r\n                                    <option value=\"B\">B</option>\r\n                                    <option value=\"C\">C</option>\r\n                                    <option value=\"D\">D</option>\r\n                                    <option value=\"E\">E</option>\r\n                                    <option value=\"F\">F</option>\r\n                                </select>\r\n                                {error.section && (<div classNameName=\"invalid-feedback\">{error.section}</div>)}\r\n                            </div>\r\n                            <button type=\"submit\" className=\"btn btn-primary\">Search</button>\r\n                        </form>\r\n                    </div>\r\n                </div>}\r\n\r\n\r\n                {!store.faculty.fetchedStudentsHelper && <div className=\"row  justify-content-center mt-4\">\r\n                    <div className=\"col-md-4\">\r\n                        <form onSubmit={secondFormHandler}>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"subjectId\">Subject Code</label>\r\n                                <select onChange={(e) => setSubjectCode(e.target.value)} className={classnames(\"form-control\",\r\n                                    {\r\n                                        'is-invalid': errorHelper.subjectCode\r\n\r\n                                    })} id=\"subjectId\">\r\n                                    <option>Select</option>\r\n                                    {\r\n                                        store.faculty.allSubjectCodeList.map(subjectCodeName =>\r\n                                            <option>{subjectCodeName}</option>\r\n                                        )\r\n                                    }\r\n                                </select>\r\n                                {errorHelper.subjectCode && (<div classNameName=\"invalid-feedback\">{errorHelper.subjectCode}</div>)}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"examId\">Exam</label>\r\n                                <select onChange={(e) => setExam(e.target.value)} value={exam} className={classnames(\"form-control\",\r\n                                    {\r\n                                        'is-invalid': errorHelper.exam\r\n\r\n                                    })} id=\"examId\">\r\n                                    <option>Select</option>\r\n                                    <option value=\"CycleTest1\">Cycle Test 1</option>\r\n                                    <option value=\"CycleTest2\">Cylce Test 2</option>\r\n                                    <option value=\"Semester\">Semester</option>\r\n                                </select>\r\n                                {errorHelper.exam && (<div classNameName=\"invalid-feedback\">{errorHelper.exam}</div>)}\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"marksId\">Total Marks</label>\r\n                                <input type=\"number\" className={classnames(\"form-control\",\r\n                                    {\r\n                                        'is-invalid': errorHelper.totalMarks\r\n\r\n                                    })} id=\"marksId\"\r\n                                    value={totalMarks} onChange={(e) => setTotalMarks(e.target.value)} />\r\n                                {errorHelper.totalMarks && (<div classNameName=\"invalid-feedback\">{errorHelper.totalMarks}</div>)}\r\n                            </div>\r\n\r\n                            <table className=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">Registration Number</th>\r\n                                        <th scope=\"col\">Student Name</th>\r\n                                        <th scope=\"col\">Marks</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        store.faculty.fetchedStudents.map((obj, index) =>\r\n                                            <tr key={index}>\r\n                                                <td>{obj.registrationNumber}</td>\r\n                                                <td>{obj.name}</td>\r\n                                                <td><div className=\"form-check\">\r\n                                                    <input className=\"form-control\" required type=\"number\" value={obj.marks} onChange={(e) => handleInputChange(e.target.value, obj._id)} id=\"defaultCheck1\" />\r\n                                                </div></td>\r\n                                            </tr>\r\n                                        )\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n                            <button type=\"submit\" className=\"btn btn-primary ml-1\">Submit</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                }\r\n            </> : (history.push('/'))}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FacultyUploadMarks\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useHistory, withRouter } from 'react-router-dom'\r\n\r\n\r\nimport { facultyUpdate, facultyLogout} from '../../redux/action/facultyAction'\r\nimport FacultyHomeHelper from '../../Components/FacultyHomeHelper'\r\n\r\n\r\nconst FacultyUpdateProfile = () => {\r\n    const store = useSelector((store) => store)\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const [gender, setGender] = useState('')\r\n    const [facultyMobileNumber, setContactNumber] = useState('')\r\n    const [aadharCard, setAadharCard] = useState('')\r\n    const [avatar, setAvatar] = useState('')\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const imagehandler = (e) => {\r\n        if (e.target.files && e.target.files[0]) {\r\n            let img = e.target.files[0]\r\n            setAvatar(img)\r\n        }\r\n    }\r\n\r\n\r\n    const formHandler = async (e) => {\r\n        e.preventDefault()\r\n        const formData = new FormData()\r\n        formData.append(\"gender\", gender)\r\n        formData.append(\"facultyMobileNumber\", facultyMobileNumber)\r\n        formData.append(\"aadharCard\", aadharCard)\r\n        formData.append(\"avatar\", avatar)\r\n        formData.append(\"email\", store.faculty.faculty.faculty.email)\r\n        setIsLoading(true)\r\n        dispatch(facultyUpdate(formData, history))\r\n        alert(\"Kindly login again to see updates\")\r\n        dispatch(facultyLogout())\r\n        history.push('/')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (store.faculty.updateProfileFlag) {\r\n            setIsLoading(false)\r\n        }\r\n    }, [store.faculty.updateProfileFlag])\r\n    return (\r\n        <div>\r\n            {store.faculty.isAuthenticated ? <>\r\n                <FacultyHomeHelper />\r\n                <div className=\"container mt-5\">\r\n                    <div className=\"row \">\r\n                        <div className=\"col-md-5 w-100 m-auto\">\r\n                            <form onSubmit={formHandler}>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"inputId\">Profile Picture</label>\r\n                                    <input required className=\"form-control\" type=\"file\" accept=\".jpg,.png,.jpeg\" id=\"inputId\" onChange={imagehandler}></input>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"genderId\">Gender</label>\r\n                                    <select onChange={(e) => setGender(e.target.value)} className=\"form-control\" id=\"genderId\">\r\n                                        <option>Select</option>\r\n                                        <option value=\"Male\">Male</option>\r\n                                        <option value=\"Female\">Female</option>\r\n                                        <option value=\"Other\">Other</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"numberId\">Contact Number</label>\r\n                                    <input onChange={(e) => setContactNumber(e.target.value)} required type=\"number\" className=\"form-control\" id=\"numberId\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"aadharId\">Aadhar Card Number</label>\r\n                                    <input onChange={(e) => setAadharCard(e.target.value)} type=\"number\" className=\"form-control\" id=\"aadharId\" />\r\n                                </div>\r\n                                <div class=\"row justify-content-center\">\r\n                                    <div class=\"col-md-1\">\r\n                                        {\r\n                                            isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\r\n                                                <span class=\"sr-only\">Loading...</span>\r\n                                            </div>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                {!isLoading && <button type=\"submit\" className=\"btn btn-info\">Update</button>}\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div></> : (history.push('/'))}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(FacultyUpdateProfile)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { getMarks } from '../../redux/action/studentAction'\r\nimport HomeHelper from '../../Components/HomeHelper'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst StudentTestPerformance = () => {\r\n    const store = useSelector(store => store)\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getMarks())\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n            {store.student.isAuthenticated ? <>\r\n                <HomeHelper />\r\n\r\n                <div className=\"container\">\r\n\r\n                    {store.student.allMarks.CycleTest1 &&\r\n                        <div className=\"row mt-3\">\r\n                            <div className=\"col-md-8 m-auto\">\r\n                                {store.student.allMarks.CycleTest1.length !== 0 ? <>\r\n                                    <h4>Cycle Test 1</h4>\r\n                                    <table className=\"table border\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th scope=\"col\">S.No</th>\r\n                                                <th scope=\"col\">Subject Code</th>\r\n                                                <th scope=\"col\">Subject Name</th>\r\n                                                <th scope=\"col\">Obtained Marks</th>\r\n                                                <th scope=\"col\">Total Marks</th>\r\n                                                <th scope=\"col\">Percentage</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {\r\n                                                store.student.allMarks.CycleTest1.map((res, index) =>\r\n                                                    <tr key={index}>\r\n                                                        <th scope=\"row\">{index + 1}</th>\r\n                                                        <td>{res.subject.subjectCode}</td>\r\n                                                        <td>{res.subject.subjectName}</td>\r\n                                                        <td>{res.marks}</td>\r\n                                                        <td>{res.totalMarks}</td>\r\n                                                        <td>{(res.marks / res.totalMarks) * 100}%</td>\r\n                                                    </tr>\r\n                                                )\r\n                                            }\r\n                                        </tbody>\r\n                                    </table></> : null}\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    }\r\n\r\n                    {store.student.allMarks.CycleTest2 &&\r\n                        <div className=\"row mt-3\">\r\n                            <div className=\"col-md-8 m-auto\">\r\n                                {store.student.allMarks.CycleTest2.length !== 0 ? <>\r\n                                    <h4>Cycle Test 2</h4>\r\n                                    <table className=\"table\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th scope=\"col\">S.No</th>\r\n                                                <th scope=\"col\">Subject Code</th>\r\n                                                <th scope=\"col\">Subject Name</th>\r\n                                                <th scope=\"col\">Obtained Marks</th>\r\n                                                <th scope=\"col\">Total Marks</th>\r\n                                                <th scope=\"col\">Percentage</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {\r\n                                                store.student.allMarks.CycleTest2.map((res, index) =>\r\n                                                    <tr key={index}>\r\n                                                        <th scope=\"row\">{index + 1}</th>\r\n                                                        <td>{res.subject.subjectCode}</td>\r\n                                                        <td>{res.subject.subjectName}</td>\r\n                                                        <td>{res.marks}</td>\r\n                                                        <td>{res.totalMarks}</td>\r\n                                                        <td>{(res.marks / res.totalMarks) * 100}%</td>\r\n                                                    </tr>\r\n                                                )\r\n                                            }\r\n                                        </tbody>\r\n                                    </table></> : null}\r\n                            </div>\r\n                        </div>\r\n                    }\r\n\r\n                    {store.student.allMarks.Semester &&\r\n                        <div className=\"row mt-3\">\r\n                            <div className=\"col-md-8 m-auto\">\r\n                                {store.student.allMarks.Semester.length !== 0 ? <>\r\n                                    <h4>Semester</h4>\r\n                                    <table className=\"table\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th scope=\"col\">S.No</th>\r\n                                                <th scope=\"col\">Subject Code</th>\r\n                                                <th scope=\"col\">Subject Name</th>\r\n                                                <th scope=\"col\">Obtained Marks</th>\r\n                                                <th scope=\"col\">Total Marks</th>\r\n                                                <th scope=\"col\">Percentage</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {\r\n                                                store.student.allMarks.Semester.map((res, index) =>\r\n                                                    <tr key={index}>\r\n                                                        <th scope=\"row\">{index + 1}</th>\r\n                                                        <td>{res.subject.subjectCode}</td>\r\n                                                        <td>{res.subject.subjectName}</td>\r\n                                                        <td>{res.marks}</td>\r\n                                                        <td>{res.totalMarks}</td>\r\n                                                        <td>{((res.marks / res.totalMarks) * 100).toFixed(2)}%</td>\r\n                                                    </tr>\r\n                                                )\r\n                                            }\r\n                                        </tbody>\r\n                                    </table></> : null}\r\n                            </div>\r\n                        </div>\r\n\r\n                    }\r\n                </div></> : (history.push('/'))}\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default StudentTestPerformance\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport classnames from 'classnames'\r\nimport { adminAddAdmin } from '../../redux/action/adminAction'\r\nimport AdminHomeHelper from '../../Components/AdminHomeHelper'\r\n\r\n\r\n\r\nconst AdminAddAdmin = () => {\r\n    const store = useSelector((state) => state)\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [department, setDepartment] = useState('')\r\n    const [dob, setDob] = useState('')\r\n    const [contactNumber, setContactNumber] = useState('')\r\n    const [error, setError] = useState({})\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n\r\n    useEffect(() => {\r\n        if (store.error) {\r\n            setError(store.error)\r\n        }\r\n        else {\r\n            setError({})\r\n        }\r\n    }, [store.error])\r\n    const formHandler = (e) => {\r\n        e.preventDefault()\r\n        setIsLoading(true)\r\n        dispatch(adminAddAdmin({\r\n            name,\r\n            email,\r\n            department,\r\n            contactNumber,\r\n            dob: dob.split(\"-\").reverse().join(\"-\")\r\n        }))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (store.admin.adminAddAdminFlag) {\r\n            setError({})\r\n        }\r\n    }, [store.admin.adminAddAdminFlag])\r\n\r\n    useEffect(() => {\r\n        if (store.error || store.admin.adminAddAdminFlag) {\r\n            setIsLoading(false)\r\n        }\r\n        else {\r\n            setIsLoading(true)\r\n        }\r\n    }, [store.error, store.admin.adminAddAdminFlag])\r\n\r\n    return (\r\n\r\n        <div>\r\n            {store.admin.isAuthenticated ? (<><AdminHomeHelper />\r\n                <div className=\"container mt-5\">\r\n                    <div className=\"row \">\r\n                        <div className=\"col\">\r\n                            <form noValidate onSubmit={formHandler}>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-6\">\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"nameId\">Admin Name</label>\r\n                                            <input onChange={(e) => setName(e.target.value)} type=\"text\" className={classnames(\"form-control\",\r\n                                                {\r\n                                                    'is-invalid': error.name\r\n                                                })} id=\"nameId\" />\r\n                                            {error.name && (<div className=\"invalid-feedback\">{error.name}</div>)}\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"emailId\">Email</label>\r\n                                            <input onChange={(e) => setEmail(e.target.value)} type=\"email\" className={classnames(\"form-control\",\r\n                                                {\r\n                                                    'is-invalid': error.email\r\n                                                })} id=\"emailId\" />\r\n                                            {error.email && (<div className=\"invalid-feedback\">{error.email}</div>)}\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"departmentId\">Department</label>\r\n                                            <select onChange={(e) => setDepartment(e.target.value)} className={classnames(\"form-control\",\r\n                                                {\r\n                                                    'is-invalid': error.department\r\n                                                })} id=\"departmentId\">\r\n                                                <option>Select</option>\r\n                                                <option value=\"E.C.E\">E.C.E</option>\r\n                                                <option value=\"C.S.E\">C.S.E</option>\r\n                                                <option value=\"E.E.E\">E.E.E</option>\r\n                                                <option value=\"I.T\">I.T</option>\r\n                                                <option value=\"Mechanical\">Mechanical</option>\r\n                                                <option value=\"Civil\">Civil</option>\r\n                                            </select>\r\n                                            {error.department && (<div className=\"invalid-feedback\">{error.department}</div>)}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-6\">\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"dobId\">DOB</label>\r\n                                            <input onChange={(e) => setDob(e.target.value)} type=\"date\" className={classnames(\"form-control\",\r\n                                                {\r\n                                                    'is-invalid': error.dob\r\n                                                })} id=\"dobId\" />\r\n                                            {error.dob && (<div className=\"invalid-feedback\">{error.dob}</div>)}\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"numberId\">Contact Number</label>\r\n                                            <input onChange={(e) => setContactNumber(e.target.value)} type=\"number\" className={classnames(\"form-control\",\r\n                                                {\r\n                                                    'is-invalid': error.contactNumber\r\n                                                })} id=\"numberId\" />\r\n                                            {error.contactNumber && (<div className=\"invalid-feedback\">{error.contactNumber}</div>)}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                    <div class=\"row justify-content-center\">\r\n                                        <div class=\"col-md-1\">\r\n                                            {\r\n                                                isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\r\n                                                    <span class=\"sr-only\">Loading...</span>\r\n                                                </div>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                    {!isLoading && <button type=\"submit\" className=\"btn btn-info  \">Add Admin</button>}\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div></>) : (history.push('/'))}\r\n\r\n        </div>\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default AdminAddAdmin\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { adminGetAllFaculty } from '../../redux/action/adminAction'\r\nimport AdminHomeHelper from '../../Components/AdminHomeHelper'\r\nimport classnames from 'classnames'\r\n\r\nconst AdminGetAllFaculty = () => {\r\n    const store = useSelector((store) => store)\r\n    const dispatch = useDispatch()\r\n    const [department, setDepartment] = useState('')\r\n    const [error, setError] = useState({})\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n\r\n    const formHandler = (e) => {\r\n        e.preventDefault()\r\n        setIsLoading(true)\r\n        dispatch(adminGetAllFaculty({ department }))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (store.admin.allFaculty.length !== 0) {\r\n            setIsLoading(false)\r\n        }\r\n        \r\n    }, [store.admin.allFaculty.length])\r\n\r\n    \r\n    return (\r\n        <div>\r\n            {store.admin.isAuthenticated ? <>\r\n                <AdminHomeHelper />\r\n                <div className=\"container\">\r\n                    <div className=\"row mt-5\">\r\n                        <div className=\"col-md-4\">\r\n                            <form form-inline noValidate onSubmit={formHandler}>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"departmentId\">Department</label>\r\n                                    <select onChange={(e) => setDepartment(e.target.value)} className={classnames(\"form-control\",\r\n                                        {\r\n                                            'is-invalid': error.department\r\n                                        })} id=\"departmentId\">\r\n                                        <option>Select</option>\r\n                                        <option value=\"E.C.E\">E.C.E</option>\r\n                                        <option value=\"C.S.E\">C.S.E</option>\r\n                                        <option value=\"E.E.E\">E.E.E</option>\r\n                                        <option value=\"I.T\">I.T</option>\r\n                                        <option value=\"Mechanical\">Mechanical</option>\r\n                                        <option value=\"Civil\">Civil</option>\r\n                                    </select>\r\n                                    {error.department && (<div className=\"invalid-feedback\">{error.department}</div>)}\r\n                                </div>\r\n                                <div class=\"row justify-content-center\">\r\n                                    <div class=\"col-md-1\">\r\n                                        {\r\n                                            isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\r\n                                                <span class=\"sr-only\">Loading...</span>\r\n                                            </div>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                {!isLoading && <button type=\"submit\" className=\"btn btn-info btn-block  \">Search</button>}\r\n                            </form>\r\n\r\n\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            \r\n                            {store.admin.allFaculty.length !== 0 && <table className=\"table border\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">S.No</th>\r\n                                        <th scope=\"col\">Registration Number</th>\r\n                                        <th scope=\"col\">Name</th>\r\n                                        <th scope=\"col\">Email</th>\r\n                                        <th scope=\"col\">Joining Year</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        store.admin.allFaculty.map((res, index) =>\r\n                                            <tr key={index}>\r\n                                                <th scope=\"row\">{index + 1}</th>\r\n                                                <td>{res.registrationNumber}</td>\r\n                                                <td>{res.name}</td>\r\n                                                <td>{res.email}</td>\r\n                                                <td>{res.joiningYear}</td>\r\n                                            </tr>\r\n                                        )\r\n                                    }\r\n                                </tbody>\r\n                            </table>}\r\n                           \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </> : (history.push('/'))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminGetAllFaculty\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { adminGetAllStudent } from '../../redux/action/adminAction'\r\nimport AdminHomeHelper from '../../Components/AdminHomeHelper'\r\nimport classnames from 'classnames'\r\n\r\nconst AdminGetAllFaculty = () => {\r\n    const store = useSelector((store) => store)\r\n    const dispatch = useDispatch()\r\n    const [department, setDepartment] = useState('')\r\n    const [year, setYear] = useState('')\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    \r\n    \r\n\r\n    const [error, setError] = useState({})\r\n    const history = useHistory()\r\n\r\n\r\n    const formHandler = (e) => {\r\n        e.preventDefault()\r\n        setIsLoading(true)\r\n        dispatch(adminGetAllStudent({ department, year }))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (store.admin.allStudent.length !== 0) {\r\n            setIsLoading(false)\r\n        }\r\n\r\n    }, [store.admin.allStudent.length])\r\n    return (\r\n        <div>\r\n            {store.admin.isAuthenticated ? <>\r\n                <AdminHomeHelper />\r\n                <div className=\"container\">\r\n                    <div className=\"row mt-5\">\r\n                        <div className=\"col-md-4\">\r\n                            <form noValidate onSubmit={formHandler}>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"departmentId\">Department</label>\r\n                                    <select onChange={(e) => setDepartment(e.target.value)} className={classnames(\"form-control\",\r\n                                        {\r\n                                            'is-invalid': error.department\r\n                                        })} id=\"departmentId\">\r\n                                        <option>Select</option>\r\n                                        <option value=\"E.C.E\">E.C.E</option>\r\n                                        <option value=\"C.S.E\">C.S.E</option>\r\n                                        <option value=\"I.T\">I.T</option>\r\n                                        <option value=\"E.E.E\">E.E.E</option>\r\n                                        <option value=\"Mechanical\">Mechanical</option>\r\n                                        <option value=\"Civil\">Civil</option>\r\n                                    </select>\r\n                                    {error.department && (<div className=\"invalid-feedback\">{error.department}</div>)}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"yearId\">Year</label>\r\n                                    <select onChange={(e) => setYear(e.target.value)} className={classnames(\"form-control\",\r\n                                        {\r\n                                            'is-invalid': error.year\r\n                                        })} id=\"yearId\">\r\n                                        <option>Select</option>\r\n                                        <option value=\"1\">1</option>\r\n                                        <option value=\"2\">2</option>\r\n                                        <option value=\"3\">3</option>\r\n                                        <option value=\"4\">4</option>\r\n                                    </select>\r\n                                    {error.year && (<div className=\"invalid-feedback\">{error.year}</div>)}\r\n                                </div>\r\n                                <div class=\"row justify-content-center\">\r\n                                    <div class=\"col-md-1\">\r\n                                        {\r\n                                            isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\r\n                                                <span class=\"sr-only\">Loading...</span>\r\n                                            </div>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                {!isLoading && <button type=\"submit\" className=\"btn btn-info btn-block  \">Search</button>}\r\n                              \r\n                               \r\n                            </form>\r\n\r\n\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n\r\n                            {store.admin.allStudent.length !== 0 && <table className=\"table border\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">S.No</th>\r\n                                        <th scope=\"col\">Registration Number</th>\r\n                                        <th scope=\"col\">Name</th>\r\n                                        <th scope=\"col\">Email</th>\r\n                                        <th scope=\"col\">Section</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        store.admin.allStudent.map((res, index) =>\r\n                                            <tr key={index}>\r\n                                                <th scope=\"row\">{index + 1}</th>\r\n                                                <td>{res.registrationNumber}</td>\r\n                                                <td>{res.name}</td>\r\n                                                <td>{res.email}</td>\r\n                                                <td>{res.section}</td>\r\n                                            </tr>\r\n                                        )\r\n                                    }\r\n                                </tbody>\r\n                            </table>}\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </> : (history.push('/'))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminGetAllFaculty\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { adminGetAllSubject } from '../../redux/action/adminAction'\r\nimport AdminHomeHelper from '../../Components/AdminHomeHelper'\r\nimport classnames from 'classnames'\r\n\r\nconst AdminGetAllSubjects = () => {\r\n    const store = useSelector((store) => store)\r\n    const dispatch = useDispatch()\r\n    const [department, setDepartment] = useState('')\r\n    const [year, setYear] = useState('')\r\n    const [error, setError] = useState({})\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n\r\n    const formHandler = (e) => {\r\n        e.preventDefault()\r\n        setIsLoading(true)\r\n        dispatch(adminGetAllSubject({ department, year }))\r\n\r\n    }\r\n    useEffect(() => {\r\n        if (store.admin.allSubject.length !== 0) {\r\n            setIsLoading(false)\r\n        }\r\n\r\n    }, [store.admin.allSubject.length])\r\n    return (\r\n        <div>\r\n            <div>\r\n                {store.admin.isAuthenticated ? <>\r\n                    <AdminHomeHelper />\r\n                    <div className=\"container\">\r\n                        <div className=\"row mt-5\">\r\n                            <div className=\"col-md-4\">\r\n                                <form noValidate onSubmit={formHandler}>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"departmentId\">Department</label>\r\n                                        <select onChange={(e) => setDepartment(e.target.value)} className={classnames(\"form-control\",\r\n                                            {\r\n                                                'is-invalid': error.department\r\n                                            })} id=\"departmentId\">\r\n                                            <option>Select</option>\r\n                                            <option value=\"E.C.E\">E.C.E</option>\r\n                                            <option value=\"C.S.E\">C.S.E</option>\r\n                                            <option value=\"E.E.E\">E.E.E</option>\r\n                                            <option value=\"I.T\">I.T</option>\r\n                                            <option value=\"Mechanical\">Mechanical</option>\r\n                                            <option value=\"Civil\">Civil</option>\r\n                                        </select>\r\n                                        {error.department && (<div className=\"invalid-feedback\">{error.department}</div>)}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"yearId\">Year</label>\r\n                                        <select onChange={(e) => setYear(e.target.value)} className={classnames(\"form-control\",\r\n                                            {\r\n                                                'is-invalid': error.year\r\n                                            })} id=\"yearId\">\r\n                                            <option>Select</option>\r\n                                            <option value=\"1\">1</option>\r\n                                            <option value=\"2\">2</option>\r\n                                            <option value=\"3\">3</option>\r\n                                            <option value=\"4\">4</option>\r\n                                        </select>\r\n                                        {error.year && (<div className=\"invalid-feedback\">{error.year}</div>)}\r\n                                    </div>\r\n                                    <div class=\"row justify-content-center\">\r\n                                        <div class=\"col-md-1\">\r\n                                            {\r\n                                                isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\r\n                                                    <span class=\"sr-only\">Loading...</span>\r\n                                                </div>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                    {!isLoading && <button type=\"submit\" className=\"btn btn-info btn-block  \">Search</button>}\r\n                                   \r\n                                </form>\r\n\r\n\r\n                            </div>\r\n                            <div className=\"col-md-8\">\r\n\r\n                                {store.admin.allSubject.length !== 0 && <table className=\"table border\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\">S.No</th>\r\n                                            <th scope=\"col\">Subject Code</th>\r\n                                            <th scope=\"col\">Subject Name</th>\r\n                                            <th scope=\"col\">Total Lectures</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {\r\n                                            store.admin.allSubject.map((res, index) =>\r\n                                                <tr key={index}>\r\n                                                    <th scope=\"row\">{index + 1}</th>\r\n                                                    <td>{res.subjectCode}</td>\r\n                                                    <td>{res.subjectName}</td>\r\n                                                    <td>{res.totalLectures}</td>\r\n                                                </tr>\r\n                                            )\r\n                                        }\r\n                                    </tbody>\r\n                                </table>}\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </> : (history.push('/'))}\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminGetAllSubjects\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport AdminHomeHelper from '../../Components/AdminHomeHelper'\r\n\r\nconst AdminHome = () => {\r\n    const store = useSelector((store) => store)\r\n\r\n    const history = useHistory()\r\n    return (\r\n        <div>\r\n           \r\n            {store.admin.isAuthenticated ? <>\r\n                <AdminHomeHelper />\r\n                <div className=\"container\">\r\n                    <div className=\"row mt-5\">\r\n                        <div className=\"col-2\">\r\n                        </div>\r\n                        <div className=\"col-8\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-5\">\r\n                                    <div className=\"card\" style={{ width: \"18rem\" }}>\r\n                                        <img className=\"card-img-top\" src={store.admin.admin.avatar} alt=\"Card image cap\" />\r\n                                        <div className=\"card-body\">\r\n                                            <h5 className=\"card-title\">{store.admin.admin.name}</h5>\r\n                                            <h5 className=\"card-title\">{store.admin.admin.registrationNumber}</h5>\r\n                                            {/* <Link to='/faculty/updateProfile'>UPDATE PROFILE</Link> */}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-7\">\r\n                                    <table className=\"table border\">\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>Name</td>\r\n                                                <td>{store.admin.admin.name}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Email</td>\r\n                                                <td>{store.admin.admin.email}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Registration Number</td>\r\n                                                <td>{store.admin.admin.registrationNumber}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Joining Year</td>\r\n                                                <td>{store.admin.admin.joiningYear}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Department</td>\r\n                                                <td>{store.admin.admin.department}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Contact Number</td>\r\n                                                <td>{store.admin.admin.contactNumber ?\r\n                                                    store.admin.admin.contactNumber : \"NA\"}</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-2\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </> : (history.push('/'))}\r\n                \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminHome\r\n","import React from 'react';\r\nimport {useSelector} from 'react-redux'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport jwt_decode from 'jwt-decode';\r\nimport setAuthToken from './redux/utils/setAuthToken'\r\nimport store from './redux/store'\r\n\r\nimport { setFacultyUser, facultyLogout } from './redux/action/facultyAction'\r\n\r\nimport { setAdminUser, adminLogout, adminGetAllStudent } from './redux/action/adminAction'\r\n\r\nimport { setStudentUser, studentLogout } from './redux/action/studentAction'\r\n\r\n\r\nimport LoginPage from './Pages/LoginPage'\r\nimport Home from './Pages/StudentHome'\r\n\r\n\r\nimport StudentDetails from './Pages/StudentDetails'\r\nimport facultyInterface from './Pages/FacultyInterface'\r\nimport AttendenceFaculty from './Pages/AttendenceFaculty'\r\n\r\nimport AdminAddStudent from './Pages/AdminAddStudent'\r\nimport AdminAddFaculty from './Pages/AdminAddFaculty'\r\nimport AdminAddSubject from './Pages/AdminAddSubject'\r\nimport StudentAttendencePage from './Pages/StudentAttendencePage'\r\nimport FacultyStudentLoginPags from './Pages/FacultyStudentLoginPags'\r\nimport StudentUpdatePassword from './Pages/StudentUpdatePassword'\r\nimport FacultyUpdatePassword from './Pages/FacultyUpdatePassword'\r\nimport ForgotPassword from './Pages/ForgotPassword'\r\nimport Chat from './Pages/Chat'\r\nimport RecieverUserDetails from './Pages/RecieverUserDetails'\r\nimport StudentUpdateProfile from './Pages/StudentUpdateProfile'\r\n \r\nimport StudentSubjectList from './Pages/Student/StudentSubjectList'\r\n\r\nimport FacultyUploadMarks from './Pages/Faculty/FacultyUploadMarks'\r\n\r\nimport FacultyUpdateProfile from './Pages/Faculty/FacultyUpdateProfile'\r\n\r\nimport StudentTestPerformace from './Pages/Student/StudentTestPerformance'\r\n\r\nimport AdminAddAdmin from './Pages/Admin/AdminAddAdmin'\r\n\r\nimport AdminGetAllFaculty from './Pages/Admin/AdminGetAllFaculty'\r\n\r\nimport AdminGetAllStudent from './Pages/Admin/AdminGetAllStudents'\r\n\r\nimport AdminGetAllSubject from './Pages/Admin/AdminGetAllSubjects'\r\n\r\nimport AdminHome from './Pages/Admin/AdminHome'\r\n \r\nif (window.localStorage.facultyJwtToken) {\r\n  setAuthToken(localStorage.facultyJwtToken);\r\n  const decoded = jwt_decode(localStorage.facultyJwtToken);\r\n \r\n  store.dispatch(setFacultyUser(decoded));\r\n\r\n  // Check for expired token\r\n  const currentTime = Date.now() / 1000;\r\n  if (decoded.exp < currentTime) {\r\n    store.dispatch(facultyLogout());\r\n    window.location.href = '/';\r\n  }\r\n}\r\nelse if (window.localStorage.studentJwtToken) {\r\n  setAuthToken(localStorage.studentJwtToken);\r\n  const decoded = jwt_decode(localStorage.studentJwtToken);\r\n\r\n  store.dispatch(setStudentUser(decoded));\r\n\r\n  // Check for expired token\r\n  const currentTime = Date.now() / 1000;\r\n  if (decoded.exp < currentTime) {\r\n    store.dispatch(studentLogout());\r\n    window.location.href = '/';\r\n  } \r\n}\r\nelse if (window.localStorage.adminJwtToken) {\r\n  setAuthToken(localStorage.adminJwtToken);\r\n  const decoded = jwt_decode(localStorage.adminJwtToken);\r\n\r\n  store.dispatch(setAdminUser(decoded));\r\n\r\n  // Check for expired token\r\n  const currentTime = Date.now() / 1000;\r\n  if (decoded.exp < currentTime) {\r\n    store.dispatch(adminLogout());\r\n    window.location.href = '/';\r\n  } \r\n}\r\n\r\nfunction App() {\r\n  const store = useSelector((store)=>store)\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path='/' component={FacultyStudentLoginPags} />\r\n          {/* <Route exact path='/adminLogin' component={LoginPage} /> */}\r\n          <Route exact path='/home' component={Home} />\r\n          <Route exact path='/student/updateProfile' component={StudentUpdateProfile} />\r\n          <Route exact path=\"/studentDetails\" component={StudentDetails} />\r\n          <Route exact path='/faculty' component={facultyInterface} />\r\n          <Route exact path='/attendenceFaculty' component={AttendenceFaculty} />\r\n          <Route exact path='/admin' component={AdminHome} />\r\n          <Route exact path=\"/admin/addStudent\" component={AdminAddStudent} />\r\n          <Route exact path=\"/admin/addFaculty\" component={AdminAddFaculty} />\r\n          <Route exact path=\"/admin/addSubject\" component={AdminAddSubject} />\r\n          <Route exact path=\"/admin/addAdmin\" component={AdminAddAdmin} />\r\n          <Route exact path=\"/admin/allFaculties\" component={AdminGetAllFaculty} />\r\n          <Route exact path=\"/admin/allStudents\" component={AdminGetAllStudent} />\r\n          <Route exact path=\"/admin/allSubject\" component={AdminGetAllSubject} />\r\n          <Route exact path=\"/student/attendence\" component={StudentAttendencePage} />\r\n          <Route exact path=\"/student/updatePassword\" component={StudentUpdatePassword} />\r\n          <Route exact path=\"/student/testPerformance\" component={StudentTestPerformace} />\r\n          <Route exact path=\"/faculty/updatePassword\" component={FacultyUpdatePassword} />\r\n          <Route exact path=\"/faculty/uploadMarks\" component={FacultyUploadMarks} />\r\n          <Route exact path=\"/faculty/updateProfile\" component={FacultyUpdateProfile} />\r\n          <Route exact path=\"/student/getAllSubjects\" component={StudentSubjectList} />\r\n          <Route exact path=\"/forgotPassword/:user\" component={ForgotPassword} />\r\n          <Route exact path=\"/chat/:room\" component={Chat} />\r\n          <Route exact path=\"/student/:registrationNumber\" component={RecieverUserDetails} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport store from './redux/store'\r\nimport { Provider } from 'react-redux'\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}